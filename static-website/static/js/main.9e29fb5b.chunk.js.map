{"version":3,"sources":["aws-exports.js","ListMessage.js","AddMessage.js","Auth/LogIn.js","Auth/Register.js","Auth/VerifyAccount.js","CustomNavbar.js","App.js","reportWebVitals.js","index.js"],"names":["awsmobile","ListMessage","useState","messages","setMessages","a","fetch","process","method","then","response","json","result","console","log","JSON","stringify","map","msg","Object","hasOwn","catch","error","useEffect","readMessages","class","nickname","message","senderName","src","imageUrl","alt","addMessage","myInit","headers","body","API","post","apiResponse","results","Promise","resolve","AddMessage","state","to","from","errors","cognito","blankfield","m","setState","handleSubmit","e","preventDefault","Storage","put","image","name","contentType","type","level","res","upload","env","s3","bucket","identity","key","lres","err","onInputChange","event","target","id","value","document","getElementById","classList","remove","onImageChange","files","img","componentDidMount","Auth","currentUserInfo","props","history","push","username","attributes","email","Form","onSubmit","this","Row","className","Group","as","Col","controlId","Label","Control","placeholder","onChange","rows","disabled","accept","Button","variant","Component","withRouter","LogIn","password","clearErrorState","signIn","align","Register","confirmpassword","passwordmatch","signUp","signUpResponse","Text","VerifyAccount","verificationcode","confirmSignUp","locationState","location","CustomNavbar","auth","user","isAuthenticated","Navbar","bg","Container","Brand","href","Collapse","Nav","Link","eventKey","onClick","handleLogOut","if","App","isAuthenticating","isVerified","signOut","handleLogIn","code","window","currentSession","session","currentAuthenticatedUser","email_verified","authProps","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Amplify","configure","region","userPoolId","userPoolWebClientId","identityPoolId","endpoints","endpoint","custom_header","getIdToken","getJwtToken","Authorization","ReactDOM","render"],"mappings":"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","file":"static/js/main.9e29fb5b.chunk.js","sourcesContent":["/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n  \"aws_project_region\": \"ap-southeast-1\",\n  \"read_lambda\": \"https://ak5pqcs66c.execute-api.ap-southeast-1.amazonaws.com/prod/\",\n  \"write_lambda\": \"https://ak5pqcs66c.execute-api.ap-southeast-1.amazonaws.com/prod/\",\n  \"cognito\": {\n    \"REGION\": \"ap-southeast-1\",\n    \"USER_POOL_ID\": \"ap-southeast-1_cclQmtkFm\",\n    \"APP_CLIENT_ID\": \"19mqu05rgmb7f621ouurqk1f0e\",\n    \"IDENTITY_POOL_ID\": \"ap-southeast-1:8053c3ed-4b94-436c-81ef-26dcc0d58e2a\"\n  },\n  \"s3\": {\n    \"bucket\": \"dashboardstack-cdkreknimgagebucketabe44d40-168v1hy1m5x8b\"\n  },\n  \"api\": {\n    \"invokeUrl\": \"https://ak5pqcs66c.execute-api.ap-southeast-1.amazonaws.com/prod\"\n  },\n};\n\n\nexport default awsmobile;\n","import './ListMessage.css';\nimport env from './aws-exports'\nimport React, { useState, useEffect } from 'react';\n\nfunction ListMessage() {\n  const [messages, setMessages] = useState([]);\n\n  async function readMessages() {\n    var requestOptions = {\n      method: 'GET'\n    };\n\n    fetch(process.env.REACT_APP_API_GATEWAY_URL, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        console.log(result[0])\n        console.log(JSON.stringify(result))\n        result.map(msg => console.log(Object.hasOwn(msg, 'messsage')))\n        setMessages(result)\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  useEffect(() => {\n    readMessages();\n  }, []);\n\n  return (\n    <div class=\"container\">\n        {\n          messages.map(msg => (\n            <div class=\"card\">\n                <h1>{msg.nickname}</h1>\n                <p>{msg.message}</p>\n                <p>Thank you,</p>\n                <p>{msg.senderName}</p>\n                <p><img src={msg.imageUrl} alt=\"alternative\" /></p>\n              </div>\n          ))\n        }\n    </div>\n  );\n}\n\nexport default ListMessage;\n","import React, { Component } from 'react';\nimport env from './aws-exports'\nimport { API, Auth, Storage } from 'aws-amplify';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\n\n\nasync function addMessage(message){\n    const myInit = { // OPTIONAL\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        body: message\n      };\n    let apiResponse = await API.post(\"createRecord\", \"/\", myInit);\n    let results = [ apiResponse ];\n    return Promise.resolve(results);\n}\n\nclass AddMessage extends Component {\n\n    state = {\n        to: \"\",\n        message: '',\n        from: '',\n        nickname: '',\n        senderName: '',\n        errors: {\n            cognito: null,\n            blankfield: false\n        },\n        messages: []\n    };\n\n    setMessages = (m) => {\n        this.setState(() => ({\n            messages: m,\n        }));\n    }\n\n    handleSubmit = ((e) => {\n        e.preventDefault();\n        console.log(e)\n        console.log(this.state)\n\n        Storage.put(\n            `photos/${this.state.image.name}`,\n            this.state.image,\n            { contentType: this.state.image.type, level: 'private' }\n        ).then((res) => {\n            this.upload = null;\n            this.setState(() => ({\n                response: 'Success uploading file!',\n            }));\n            console.log(\"res from storage\", res)\n            var result = {\n                \"to\": this.state.to,\n                \"message\": this.state.message,\n                \"from\": this.state.from,\n                \"nickName\": this.state.nickname,\n                \"senderName\": this.state.senderName,\n                \"imageUrl\": \"https://\" + env.s3.bucket + \".s3.ap-southeast-1.amazonaws.com/private/\" + this.state.identity + \"/\" + res.key\n            }\n            console.log(\"req to lambda\", result)\n            // fetch(env.write_lambda, {\n            //     method: \"POST\",\n            //     body: JSON.stringify(result)\n            // }).then(data => {\n            //     // do what you need with the data from the post request\n            // });\n            addMessage(result).then((lres) => {\n                \n            })            \n        }).catch(err => {\n            this.setState({ response: `Cannot uploading file: ${err}` });\n        });\n\n    })\n\n\n    onInputChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n        document.getElementById(event.target.id).classList.remove('is-danger');\n    };\n\n    onImageChange = event => {\n        if (event.target.files && event.target.files[0]) {\n            console.log(event.target.files)\n            let img = event.target.files[0];\n            this.setState({\n                image: img\n            });\n        }\n    }\n\n    componentDidMount = () => {\n        Auth.currentUserInfo()\n            .then(response => {\n                console.log('test {}', JSON.stringify(response));\n                if (JSON.stringify(response) == null) {\n                    this.props.history.push('/new');\n                } else {\n                    this.setState({\n                        identity: response.id,\n                        senderName: response.username,\n                        from: response.attributes.email\n                    });\n                }\n            }).catch((err) => {\n                this.props.history.push('/login');\n            });\n    }\n\n    render() {\n\n        return (\n\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n                    <Row className=\"mb-3\">\n                        <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Receiver</Form.Label>\n                            <Form.Control className=\"input\"\n                                type=\"text\"\n                                id=\"to\"\n                                aria-describedby=\"usernameHelp\"\n                                placeholder=\"Receiver Email\"\n                                value={this.state.to}\n                                onChange={this.onInputChange} />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Nick Name</Form.Label>\n                            <Form.Control className=\"input\"\n                                type=\"text\"\n                                id=\"nickname\"\n                                placeholder=\"Receiver Nick Name\"\n                                value={this.state.nickname}\n                                onChange={this.onInputChange} />\n                        </Form.Group>\n                    </Row>\n\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Message</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3}\n                            onChange={this.onInputChange}\n                            id=\"message\" />\n                    </Form.Group>\n\n                    <Row className=\"mb-3\">\n                        <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Sender Email</Form.Label>\n                            <Form.Control className=\"input\"\n                                type=\"text\"\n                                id=\"from\"\n                                placeholder=\"Sender Email\"\n                                value={this.state.from}\n                                disabled />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Sender Name</Form.Label>\n                            <Form.Control className=\"input\"\n                                type=\"text\"\n                                id=\"senderName\"\n                                placeholder=\" Sender Name\"\n                                value={this.state.senderName}\n                                disabled />\n                        </Form.Group>\n                    </Row>\n                    <Form.Group className=\"mb-3\" controlId=\"formFile\">\n                        <Form.Label>Upload Image</Form.Label>\n                        <Form.Control\n                            type=\"file\"\n                            accept=\"image/png, image/jpeg\"\n                            onChange={this.onImageChange}\n                        />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Add Message\n                    </Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AddMessage);\n","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { withRouter } from 'react-router';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\n\nclass LogIn extends Component {\n    state = {\n        username: '',\n        password: '',\n        errors: {\n            cognito: null,\n            blankfield: false\n        }\n    };\n\n    clearErrorState = () => {\n        this.setState({\n            errors: {\n                cognito: null,\n                blankfield: false\n            }\n        });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { username, password } = this.state;\n\n        // AWS Cognito integration here\n        try {\n            await Auth.signIn(username, password);\n            this.props.history.push('/new');\n        } catch (error) {\n            console.log(\"errr {}\", error)\n        }\n    };\n\n    onInputChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n        document.getElementById(event.target.id).classList.remove('is-danger');\n    };\n\n    render() {\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <h2 align=\"center\">Log In</h2>\n                <Form.Group className=\"mb-3\" controlId=\"inlineFormInputGroup\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter email\" id=\"username\" value={this.state.username} onChange={this.onInputChange} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" id=\"password\" value={this.state.password} onChange={this.onInputChange} />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        );\n    }\n}\n\nexport default withRouter(LogIn);","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { withRouter } from 'react-router';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\n\nclass Register extends Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    confirmpassword: '',\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // AWS Cognito integration here\n    const { username, email, password } = this.state;\n\n    try {\n      const signUpResponse = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email: email\n        }\n      });\n      console.log(signUpResponse);\n      console.log(username)\n      this.props.history.push('/verify', { username });\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { 'message': error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove('is-danger');\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <h2 align=\"center\">Register</h2>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\"\n            id=\"username\"\n            aria-describedby=\"userNameHelp\"\n            placeholder=\"Enter username\"\n            value={this.state.username}\n            onChange={this.onInputChange} />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"text\"\n            type=\"email\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter email\"\n            value={this.state.email}\n            onChange={this.onInputChange} />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" id=\"password\" value={this.state.password} onChange={this.onInputChange} />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"confirmpassword\" onChange={this.onInputChange} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    );\n  }\n}\n\n\n\nexport default withRouter(Register);","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { withRouter } from 'react-router';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\n\nclass VerifyAccount extends Component {\n    state = {\n        username: '',\n        verificationcode: '',\n        errors: {\n            cognito: null,\n            blankfield: false\n        }\n    };\n\n    componentDidMount() {\n        const locationState = this.props.location.state;\n\n        if (locationState && locationState.username) {\n            this.setState({ username: locationState.username });\n        }\n    }\n\n    clearErrorState = () => {\n        this.setState({\n            errors: {\n                cognito: null,\n                blankfield: false\n            }\n        });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        // AWS Cognito integration here\n        try {\n            await Auth.confirmSignUp(this.state.username, this.state.verificationcode);\n            this.props.history.push('/login');\n        } catch (error) {\n            let err = null;\n            !error.message ? err = { 'message': error } : err = error;\n            this.setState({\n                errors: {\n                    ...this.state.errors,\n                    cognito: err\n                }\n            });\n        }\n    };\n\n    onInputChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n        document.getElementById(event.target.id).classList.remove('is-danger');\n    };\n\n    render() {\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\"\n                        id=\"username\"\n                        aria-describedby=\"usernameHelp\"\n                        placeholder=\"Enter username\"\n                        value={this.state.username}\n                        onChange={this.onInputChange} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\"\n                        type=\"text\"\n                        id=\"verificationcode\"\n                        aria-describedby=\"verificationcodeHelp\"\n                        placeholder=\"Enter Verification Code\"\n                        value={this.state.verificationcode}\n                        onChange={this.onInputChange} />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Verify account\n                </Button>\n            </Form>\n        );\n    }\n}\n\nexport default withRouter(VerifyAccount);","import React, { Component } from 'react';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\n\nexport default class CustomNavbar extends Component {\n    render() {\n        const { user, isAuthenticated } = this.props.auth;\n\n        return (\n            <>\n                <Navbar bg=\"light\" variant=\"light\">\n                    <Container>\n                        <Navbar.Brand href=\"\">\n                            Appreciation Dashboard\n                        </Navbar.Brand>\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"me-auto\">\n                                <Nav.Link href=\"/new\">Add Message</Nav.Link>\n                            </Nav>\n                            <Nav>\n                                <Nav.Link href=\"#deets\">\n                                    {isAuthenticated && user && (\n                                            <strong>Cognito ID: {user.username}</strong>\n                                    )}\n                                </Nav.Link>\n                                {!isAuthenticated && (\n                                    <Nav.Link eventKey={2} href=\"/signup\">\n                                        <strong>Register</strong>\n                                    </Nav.Link>\n                                )}\n                                {!isAuthenticated && (\n                                    <Nav.Link eventKey={2} href=\"/login\">\n                                        Log in\n                                    </Nav.Link>\n                                )}\n                                {isAuthenticated && (\n                                    <Nav.Link eventKey={2} href=\"/\" onClick={(e) => { e.preventDefault(); this.props.handleLogOut(); }} if={isAuthenticated}>\n                                        Log out\n                                    </Nav.Link>\n                                )}\n\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n\n                </Navbar>\n            </>\n        );\n    }\n}\n","import env from './aws-exports'\nimport React, { useState, useEffect, Component } from 'react';\nimport ListMessage from './ListMessage';\nimport AddMessage from './AddMessage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport LogIn from './Auth/LogIn';\nimport Register from './Auth/Register';\nimport VerifyAccount from './Auth/VerifyAccount';\nimport Navbar from './CustomNavbar';\nimport { Auth } from 'aws-amplify';\nimport './App.css'\n\nexport default class App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    isVerified: false,\n    user: null\n  }\n\n  handleLogOut = async () => {\n    try {\n      await Auth.signOut();\n      this.setState({\n        user: null,\n        isAuthenticated: false,\n        isAuthenticating: false,\n        isVerified: false\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  handleLogIn = async (username, password) => {\n    try {\n      const user = await Auth.signIn(username, password);\n      console.log(user);\n      this.setState({\n        user: user,\n        isAuthenticated: true,\n      });\n    } catch (error) {\n      if (error.code && error.code === 'UserNotConfirmedException') {\n        window.location.href = '/verify';\n      }\n      console.log(error.message);\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const session = await Auth.currentSession();\n      this.setState({\n        isAuthenticated: true\n      });\n      console.log(session);\n\n      const user = await Auth.currentAuthenticatedUser();\n      this.setState({\n        user\n      });\n\n      if (user.attributes.email_verified) {\n        this.setState({\n          isVerified: true\n        });\n      }\n    } catch (error) {\n      if (error !== 'No current user') {\n        console.log(error);\n      }\n    }\n\n    this.setState({ isAuthenticating: false });\n  }\n\n  render() {\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n    };\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar auth={authProps} handleLogOut={this.handleLogOut} />\n          <Switch>\n            <Route path=\"/\" exact=\"true\">\n              <ListMessage />\n            </Route>\n            <Route path=\"/new\">\n              <AddMessage />\n            </Route>\n            <Route path=\"/login\">\n              <LogIn></LogIn>\n            </Route>\n            <Route path=\"/signup\">\n              <Register></Register>\n            </Route>\n            <Route path=\"/verify\">\n              <VerifyAccount></VerifyAccount>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Amplify  from 'aws-amplify';\nimport config from './aws-exports';\nimport { Auth } from 'aws-amplify';\n\nAmplify.configure({\n  Auth: {\n    region: process.env.REACT_APP_REGION,\n    userPoolId: process.env.REACT_APP_USER_POOL_ID,\n    userPoolWebClientId: process.env.REACT_APP_APP_CLIENT_ID,\n    identityPoolId: process.env.REACT_APP_IDENTITY_POOL_ID\n  },\n  Storage: {\n    region: process.env.REACT_APP_REGION,\n    bucket: process.env.REACT_APP_S3_BUCKET\n  },\n  API: {\n    endpoints: [\n      {\n        name: 'createRecord',\n        endpoint: process.env.REACT_APP_API_GATEWAY_URL,\n        path: '/',\n        custom_header: async () => { \n          return { Authorization: `Bearer ${(await Auth.currentSession()).getIdToken().getJwtToken()}` };\n        }\n      }\n    ]\n  }\n});\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}