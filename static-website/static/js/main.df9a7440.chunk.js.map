{"version":3,"sources":["aws-exports.js","ListMessage.js","AddMessage.js","Auth/LogIn.js","Auth/Register.js","Auth/VerifyAccount.js","App.js","reportWebVitals.js","index.js"],"names":["awsmobile","ListMessage","useState","messages","setMessages","a","fetch","env","read_lambda","method","then","response","json","result","console","log","JSON","stringify","map","msg","Object","hasOwn","catch","error","useEffect","readMessages","class","nickname","message","senderName","src","alt","AddMessage","state","to","from","errors","cognito","blankfield","m","setState","handleSubmit","e","preventDefault","Storage","put","image","name","contentType","type","level","res","upload","s3","bucket","identity","key","write_lambda","body","data","err","onInputChange","event","target","id","value","document","getElementById","classList","remove","onImageChange","files","img","componentDidMount","Auth","currentUserInfo","props","history","push","username","attributes","email","Form","onSubmit","this","Group","className","controlId","Label","Control","placeholder","onChange","as","rows","disabled","accept","Button","variant","Component","withRouter","LogIn","password","clearErrorState","signIn","href","Register","confirmpassword","passwordmatch","signUp","signUpResponse","VerifyAccount","verificationcode","confirmSignUp","locationState","location","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Amplify","configure","region","config","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","identityPoolId","IDENTITY_POOL_ID","ReactDOM","render"],"mappings":"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","file":"static/js/main.df9a7440.chunk.js","sourcesContent":["/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"ap-southeast-1\",\n    \"read_lambda\":\"https://ieg2c19vdj.execute-api.ap-southeast-1.amazonaws.com/prod/\",\n    \"write_lambda\":\"https://ieg2c19vdj.execute-api.ap-southeast-1.amazonaws.com/prod/\",\n    \"cognito\": {\n        \"REGION\": \"ap-southeast-1\",\n        \"USER_POOL_ID\": \"ap-southeast-1_qrLBU4AjA\",\n        \"APP_CLIENT_ID\": \"6kmlo652laocnrleujjt87gtbn\",\n        \"IDENTITY_POOL_ID\": \"ap-southeast-1:30d55a6d-0d2f-4d01-ab1d-1bacf8781dfa\"\n      },\n      \"s3\": {\n        \"bucket\": \"dashboardstack-cdkreknimgagebucketabe44d40-xbyzkmmcxetn\"\n      }\n};\n\n\nexport default awsmobile;\n","import './ListMessage.css';\nimport env from './aws-exports'\nimport React, { useState, useEffect } from 'react';\n\nfunction ListMessage() {\n  const [messages, setMessages] = useState([]);\n\n  async function readMessages() {\n    var requestOptions = {\n      method: 'GET'\n    };\n\n    fetch(env.read_lambda, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        console.log(result[0])\n        console.log(JSON.stringify(result))\n        result.map(msg => console.log(Object.hasOwn(msg, 'messsage')))\n        setMessages(result)\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  useEffect(() => {\n    readMessages();\n  }, []);\n\n  return (\n    <div class=\"container\">\n        {\n          messages.map(msg => (\n            <div class=\"card\">\n                <h1>{msg.nickname}</h1>\n                <p>{msg.message}</p>\n                <p>Thank you,</p>\n                <p>{msg.senderName}</p>\n                <p><img src=\"\" alt=\"alternative\" /></p>\n              </div>\n          ))\n        }\n    </div>\n  );\n}\n\nexport default ListMessage;\n","import React, { Component } from 'react';\nimport env from './aws-exports'\nimport { Auth, Storage } from 'aws-amplify';\nimport { Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\n\nclass AddMessage extends Component {\n\n    state = {\n        to: \"\",\n        message: '',\n        from: '',\n        nickname: '',\n        senderName: '',\n        errors: {\n            cognito: null,\n            blankfield: false\n        },\n        messages: []\n    };\n\n    setMessages = (m) => {\n        this.setState(() => ({\n            messages: m,\n        }));\n    }\n\n    handleSubmit = ((e) => {\n        e.preventDefault();\n        console.log(e)\n        console.log(this.state)\n\n        Storage.put(\n            `photos/${this.state.image.name}`,\n            this.state.image,\n            { contentType: this.state.image.type, level: 'private' }\n        ).then((res) => {\n            this.upload = null;\n            this.setState(() => ({\n                response: 'Success uploading file!',\n            }));\n            console.log(\"res from storage\", res)\n            var result = {\n                \"to\": this.state.to,\n                \"message\": this.state.message,\n                \"from\": this.state.from,\n                \"nickName\": this.state.nickname,\n                \"senderName\": this.state.senderName,\n                \"imageUrl\": \"https://\"+env.s3.bucket + \".s3.ap-southeast-1.amazonaws.com/private/\" + this.state.identity + \"/\" + res.key\n            }\n            console.log(\"req to lambda\", result)\n            fetch(env.write_lambda, {\n                method: \"POST\",\n                body: JSON.stringify(result)\n            }).then(data => {\n                // do what you need with the data from the post request\n            });\n        }).catch(err => {\n            this.setState({ response: `Cannot uploading file: ${err}` });\n        });\n\n\n\n    })\n\n\n    onInputChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n        document.getElementById(event.target.id).classList.remove('is-danger');\n    };\n\n    onImageChange = event => {\n        if (event.target.files && event.target.files[0]) {\n            console.log(event.target.files)\n            let img = event.target.files[0];\n            this.setState({\n                image: img\n            });\n        }\n    }\n\n    componentDidMount = () => {\n        Auth.currentUserInfo()\n            .then(response => {\n                console.log('test {}', JSON.stringify(response));\n                if (response == null) {\n                    this.props.history.push('/new');\n                } else {\n                    this.setState({\n                        identity: response.id,\n                        senderName: response.username,\n                        from: response.attributes.email\n                    });\n                }\n            }).catch((err) => {\n                this.props.history.push('/login');\n            });\n    }\n\n    render() {\n\n        return (\n            <div class=\"container\">\n                <div>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Receiver</Form.Label>\n                            <Form.Control className=\"input\"\n                                type=\"text\"\n                                id=\"to\"\n                                aria-describedby=\"usernameHelp\"\n                                placeholder=\"Receiver Email\"\n                                value={this.state.to}\n                                onChange={this.onInputChange} />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Message</Form.Label>\n                            <Form.Control as=\"textarea\" rows={3}\n                                onChange={this.onInputChange}\n                                id=\"message\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Sender Email</Form.Label>\n                            <Form.Control className=\"input\"\n                                type=\"text\"\n                                id=\"from\"\n                                placeholder=\"Sender Email\"\n                                value={this.state.from}\n                                disabled />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Nick Name</Form.Label>\n                            <Form.Control className=\"input\"\n                                type=\"text\"\n                                id=\"nickname\"\n                                placeholder=\"Receiver Nick Name\"\n                                value={this.state.nickname}\n                                onChange={this.onInputChange} />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Sender Name</Form.Label>\n                            <Form.Control className=\"input\"\n                                type=\"text\"\n                                id=\"senderName\"\n                                placeholder=\" Sender Name\"\n                                value={this.state.senderName}\n                                disabled />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formFile\">\n                            <Form.Label>Upload Image</Form.Label>\n                            <Form.Control\n                                type=\"file\"\n                                accept=\"image/png, image/jpeg\"\n                                onChange={this.onImageChange}\n                            />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Add Message\n                        </Button>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AddMessage);\n","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { withRouter } from 'react-router'; \n\nclass LogIn extends Component {\n  state = {\n    username: '',\n    password: '',\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n\n    // AWS Cognito integration here\n    try {\n      await Auth.signIn(username, password);\n      this.props.history.push('/new');\n    }catch(error) {\n      console.log(\"errr {}\", error)\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove('is-danger');\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Log in</h1>\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default withRouter(LogIn);","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { withRouter } from 'react-router'; \n\nclass Register extends Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    confirmpassword: '',\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // AWS Cognito integration here\n    const { username, email, password } = this.state;\n\n    try {\n      const signUpResponse = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email: email\n        }\n      });\n      console.log(signUpResponse);\n      console.log(username)\n      this.props.history.push('/verify', { username });\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { 'message': error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove('is-danger');\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Register</h1>\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"userNameHelp\"\n                  placeholder=\"Enter username\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Register\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\n\n\nexport default withRouter(Register);","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { withRouter } from 'react-router'; \n\nclass VerifyAccount extends Component {\n  state = {\n    username: '',\n    verificationcode: '',\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  componentDidMount() {\n    const locationState = this.props.location.state;\n\n    if (locationState && locationState.username) {\n      this.setState({ username: locationState.username });\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // AWS Cognito integration here\n    try {\n      await Auth.confirmSignUp(this.state.username, this.state.verificationcode);\n      this.props.history.push('/new');\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { 'message': error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove('is-danger');\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Verification</h1>\n          <p>We've sent you a email with a confirmation code. Please fill out the form below with the code.</p>\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  id=\"verificationcode\"\n                  aria-describedby=\"verificationcodeHelp\"\n                  placeholder=\"Enter Verification Code\"\n                  value={this.state.verificationcode}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/resendverification\">Re-send verification code?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Verify account\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default withRouter(VerifyAccount);","import env from './aws-exports'\nimport React, { useState, useEffect } from 'react';\nimport ListMessage from './ListMessage';\nimport AddMessage from './AddMessage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport LogIn from './Auth/LogIn';\nimport Register from './Auth/Register';\nimport VerifyAccount from './Auth/VerifyAccount';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact=\"true\">\n            <ListMessage />\n          </Route>\n          <Route path=\"/new\">\n            <AddMessage />\n          </Route>\n          <Route path=\"/login\">\n            <LogIn></LogIn>\n          </Route>\n          <Route path=\"/signup\">\n            <Register></Register>\n          </Route>\n          <Route path=\"/verify\">\n            <VerifyAccount></VerifyAccount>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Amplify  from 'aws-amplify';\nimport config from './aws-exports';\n\nAmplify.configure({\n  Auth: {\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  Storage: {\n    region: config.cognito.REGION,\n    bucket: config.s3.bucket\n  }\n});\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}