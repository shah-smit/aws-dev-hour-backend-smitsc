{"version":3,"sources":["components/Navbar.js","components/home/Hero.js","components/home/HomeContent.js","components/Home.js","components/photos/Photos.js","components/table/Checkbox.js","components/table/columns.js","components/table/FileTable.js","components/PhotosAdmin.js","components/ProfileAdmin.js","components/FormErrors.js","lib/formValidation.js","components/auth/LogIn.js","components/auth/Register.js","components/auth/ForgotPassword.js","components/auth/ForgotPasswordVerification.js","components/auth/ChangePassword.js","components/auth/ChangePasswordConfirm.js","components/auth/Welcome.js","components/Footer.js","components/auth/VerifyAccount.js","components/auth/ResendVerification.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","Component","render","this","props","auth","user","isAuthenticated","className","role","aria-label","href","src","width","height","alt","id","username","onClick","e","preventDefault","handleLogOut","Hero","HomeContent","Home","images","getPresignedURLS","orig","thumb","a","Storage","get","level","presignOriginal","bucket","config","s3","thumbBucket","presignThumb","results","Promise","resolve","getPhotoLabels","key","myInit","headers","response","queryStringParameters","action","API","apiResponse","Photos","state","filelist","cognitoSub","loaded","pr","getId","Auth","currentUserInfo","then","setState","listImages","addImagesToList","filename","concat","fullName","cognitoID","result","currentImg","original","thumbnail","description","isSelected","push","allLabels","data","filtered","cut","list","filter","label","includes","filterLabels","Object","values","join","i","fileArray","fileNames","map","image","replace","forEach","componentDidMount","items","thumbnailPosition","Checkbox","React","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","type","COLUMNS","Header","accessor","FileTable","columns","useMemo","useTable","useSortBy","useRowSelect","hooks","visibleColumns","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","style","border","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","borderBottom","background","color","fontWeight","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","padding","RowItem","keys","length","JSON","stringify","deleteImages","defaultProps","getImageDetails","lastModified","toString","bytes","parseInt","Math","floor","log","round","pow","bytesToSize","size","PhotosAdmin","imageName","imageFile","tableData","uploading","identity","that","all","photoKey","fullPhotoKey","del","currentState","reduce","accum","curVal","uploadImage","console","upload","files","name","put","contentType","catch","err","accept","display","onChange","value","placeholder","handleChange","click","loading","ProfileAdmin","email","attributes","FormErrors","formerrors","blankfield","passwordmatch","apierrors","cognito","message","validateForm","event","inputs","document","getElementsByClassName","classList","contains","remove","trim","getElementById","add","firstname","lastname","verificationcode","password","oldpassword","newpassword","confirmpassword","LogIn","errors","clearErrorState","handleSubmit","error","Validate","handleLogIn","history","onInputChange","target","onSubmit","aria-describedby","Register","signUp","signUpResponse","ForgotPassword","forgotPasswordHandler","forgotPassword","ForgotPasswordVerification","passwordVerificationHandler","forgotPasswordSubmit","ChangePassword","currentAuthenticatedUser","changePassword","ChangePasswordConfirmation","Welcome","setTimeout","window","location","Footer","VerifyAccount","confirmSignUp","locationState","ResendVerification","resendSignUp","library","faEdit","ProtectedRoute","Comp","component","loggedIn","verified","path","wrapper","redirect","to","pathname","prevLocation","App","isAuthenticating","isVerified","signOut","signIn","code","currentSession","session","email_verified","authProps","exact","ChangePasswordConfirm","Boolean","hostname","match","Amplify","configure","region","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","identityPoolId","IDENTITY_POOL_ID","endpoints","endpoint","api","invokeUrl","custom_header","getIdToken","getJwtToken","Authorization","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qUACe,MAAMA,UAAeC,YAElCC,SAAU,MAAD,EAC2BC,KAAKC,MAAMC,KAArCC,EADD,EACCA,KAAMC,EADP,EACOA,gBAEd,OACE,sBAAKC,UAAU,SAASC,KAAK,aAAaC,aAAW,kBAArD,UACE,qBAAKF,UAAU,eAAf,SACE,mBAAGA,UAAU,cAAcG,KAAK,IAAhC,SACE,qBAAKC,IAAI,mBAAmBC,MAAM,MAAMC,OAAO,KAAKC,IAAI,iBAI5D,sBAAKC,GAAG,qBAAqBR,UAAU,cAAvC,UACE,sBAAKA,UAAU,eAAf,UACE,mBAAGG,KAAK,IAAIH,UAAU,cAAtB,kBAGA,mBAAGG,KAAK,UAAUH,UAAU,cAA5B,oBAGA,mBAAGG,KAAK,SAASH,UAAU,cAA3B,mBAGA,mBAAGG,KAAK,WAAWH,UAAU,cAA7B,wBAKF,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACGD,GAAmBD,GAClB,6CACeA,EAAKW,YAGtB,sBAAKT,UAAU,UAAf,WACID,GACA,gCACE,mBAAGI,KAAK,YAAYH,UAAU,oBAA9B,SACE,gDAEF,mBAAGG,KAAK,SAASH,UAAU,kBAA3B,uBAKHD,GACC,mBAAGI,KAAK,IAAIO,QAAUC,IAAQA,EAAEC,iBAAkBjB,KAAKC,MAAMiB,gBAAmBb,UAAU,kBAA1F,oCC/CH,SAASc,IACtB,OACE,yBAASd,UAAU,kBAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKI,IAAI,qBAAqBG,IAAI,uBCL7B,SAASQ,IACtB,OACE,yBAASf,UAAU,YAAnB,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,2DACA,2mBACA,4BAAG,mBAAGG,KAAK,sCAAR,mCAKX,qBAAKH,UAAU,cAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,4DACA,qyBACA,4BAAG,mBAAGG,KAAK,6BAAR,mCAKX,qBAAKH,UAAU,cAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,iDACA,wiBACA,4BAAG,mBAAGG,KAAK,mCAAR,wCC9BJ,SAASa,IACtB,OACE,eAAC,WAAD,WACE,cAACF,EAAD,IACA,qBAAKd,UAAU,UAAf,SACE,oBAAGA,UAAU,oBAAb,UACE,sBAAMA,UAAU,iBAAhB,iBADF,0EAIF,cAACe,EAAD,O,+CCRN,IAAIE,EAAS,G,SAEEC,E,gFAAf,WAAgCC,EAAMC,GAAtC,mBAAAC,EAAA,sEAC8BC,IAAQC,IAAIJ,EAAM,CAAEK,MAAO,YADzD,cACMC,EADN,gBAE2BH,IAAQC,IAAIH,EAAO,CAAEI,MAAO,UAAWE,OAASC,EAAOC,GAAGC,cAFrF,cAEMC,EAFN,OAGMC,EAAU,CAAEN,EAAiBK,GAHnC,kBAISE,QAAQC,QAAQF,IAJzB,4C,+BAOeG,E,8EAAf,WAA8BC,GAA9B,mBAAAd,EAAA,4DACkB,WACH,UAEPe,EAAS,CACbC,QAAS,CACP,eAAgB,oBAElBC,UAAU,EACVC,sBAAuB,CACrBC,OAAQ,YACRL,IAAKA,IAXX,SAe0BM,IAAIlB,IAdZ,WACH,UAakCa,GAfjD,cAeMM,EAfN,OAgBMX,EAAU,CAAEW,GAhBlB,kBAkBSV,QAAQC,QAAQF,IAlBzB,4C,sBAqBe,MAAMY,UAAelD,YAAW,eAAD,iCAE5CmD,MAAQ,CACNN,SAAU,GACVO,SAAU,GACVC,WAAY,GACZC,QAAQ,EACRC,GAAI,IAPsC,KAU5CC,MAAQ,KACNC,IAAKC,kBACFC,MAAKd,IAEJ3C,KAAK0D,SAAS,CAACP,WAAYR,EAAS9B,SAdE,KAkB5C8C,WAlB4C,sBAkB/B,yBAiBFC,EAjBE,SAAAlC,EAAA,6DAiBFkC,EAjBE,SAiBcC,GAEvB,IAAIrC,EAAO,UAAUsC,OAAOD,GACxBE,EAAW,WAAWD,OAAOE,GAAWF,OAAO,YAAYA,OAAOD,GACtEtC,EAAiBC,EAAMA,GACpBiC,MAAMQ,IACL,IAEIC,EAAa,CACfC,SAHwBF,EAAO,GAI/BG,UAHqBH,EAAO,GAI5BI,YAAa,sBACbC,YAAY,GAEdhD,EAAOiD,KAAKL,GAEZ3B,EAAewB,GACZN,MAAMQ,IAEL,IAAIO,EAAYP,EAAO,GAAGQ,KAE1B,GAAID,EAAW,CAMb,IAAIE,EAHiB,EAACC,EAAKC,IACzBA,EAAKC,QAAOC,IAAUA,EAAMC,SAASJ,KAExBK,CAAa,UALPC,OAAOC,OAAOV,IAKoBW,KAAK,OAC5D,IAAK,IAAIC,KAAK9D,EACZ,GAAIA,EAAO8D,GAAGjB,SAASY,SAASlB,GAAW,CACzCvC,EAAO8D,GAAGf,YAAcK,EACxB,eAhDL,SAEU/C,IAAQiD,KAAK,UAAW,CAAE/C,MAAO,YAF3C,OAELoC,EAFK,OAIPoB,EAAYJ,OAAOC,OAAOjB,GACxBD,EAAY,EAAKf,MAAME,WAEvBmC,EAAYD,EAAUE,KAAI,SAAUC,GACxC,OAAOA,EAAMhD,IAAIiD,QAAQ,UAAW,OAGtC,EAAK/B,SAAS,CAAER,SAAUoC,IAI1BA,EAAUI,QAAQ9B,GAyClB,EAAKF,SAAS,CAACL,IAAI,IAxDR,4CAlB+B,KA+E5CsC,kBA/E4C,sBA+ExB,sBAAAjE,EAAA,sDAClB,EAAK4B,QACL,EAAKK,aACL,EAAKD,SAAS,CAACN,QAAQ,IAHL,2CAMpBrD,SACE,OACE,cAAC,WAAD,UACE,yBAASM,UAAU,UAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,6CACA,mBAAGA,UAAU,gBAAb,gDACA,uBACA,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SACGL,KAAKiD,MAAMI,GAAK,cAAC,IAAD,CAAcuC,MAAOtE,EAAQuE,kBAAkB,SAAa,iB,YChItF,MAAMC,EAAWC,IAAMC,YAAW,CAAC,EAA4BC,KAAS,IAAnCC,EAAkC,EAAlCA,cAAkBC,EAAgB,iCAC5E,MAAMC,EAAaL,IAAMM,SACnBC,EAAcL,GAAOG,EAM3B,OAJAL,IAAMQ,WAAU,KACdD,EAAYE,QAAQN,cAAgBA,IACnC,CAACI,EAAaJ,IAGf,mCACE,mCAAOO,KAAK,WAAWR,IAAKK,GAAiBH,SCZtCO,EAAU,CACrB,CACEC,OAAQ,WACRC,SAAU,OAEZ,CACED,OAAQ,gBACRC,SAAU,gBAEZ,CACED,OAAQ,OACRC,SAAU,SCaDC,EAAa5G,IAExB,MAAM6G,EAAUC,mBAAQ,IAAML,GAAS,IAFL,EAW9BM,mBAAS,CACXF,UACArC,KAAMxE,EAAMiD,UAEd+D,YAAWC,gBACVC,IACCA,EAAMC,eAAe7C,MAAMuC,GAClB,CACL,CACEtE,IAAK,YACLmE,OAAQ,EAAGU,mCACT,cAACvB,EAAD,eAAcuB,MAEhBC,KAAM,EAAGC,SAAU,cAACzB,EAAD,eAAcyB,EAAIC,kCAEpCV,QArBPW,EALgC,EAKhCA,cACAC,EANgC,EAMhCA,kBACAC,EAPgC,EAOhCA,aACAC,EARgC,EAQhCA,KACAC,EATgC,EAShCA,WACAC,EAVgC,EAUhCA,iBAqBF,OACE,qCACE,kDAAWL,KAAX,IAA4BM,MAAO,CAAEC,OAAQ,kBAA7C,UACE,gCACGL,EAAapC,KAAI0C,GAChB,8CAA6BA,EAAYC,uBAAzC,aACGD,EAAYvF,QAAQ6C,KAAI4C,GACvB,+CAEMA,EAAOC,eAAeD,EAAOE,yBAFnC,IAGEN,MAAO,CACLO,aAAc,oBACdC,WAAY,UACZC,MAAO,QACPC,WAAY,QAPhB,UAUGN,EAAOpI,OAAO,UACf,+BACGoI,EAAOO,SACJP,EAAOQ,aACL,gBACA,gBACF,QAfDR,EAAOtH,QAHToH,EAAYpH,QAyBzB,iDAAW6G,KAAX,aACGE,EAAKrC,KAAIgC,IACRM,EAAWN,GAjFNA,IACf,8CAAqBA,EAAIqB,eAAzB,aACGrB,EAAIsB,MAAMtD,KAAIuD,GACb,8CAEMA,EAAKC,gBAFX,IAGEhB,MAAO,CACLiB,QAAS,OACThB,OAAQ,iBACRO,WAAY,SANhB,SASGO,EAAK/I,OAAO,UARR+I,EAAKjI,QAHP0G,EAAI1G,IAiFIoI,CAAQ1B,aAIrB,gDAAmBtC,OAAOiE,KAAKpB,GAAkBqB,UACjD,8BACE,+BACGC,KAAKC,UACJ,CACEvB,iBAAkBA,EAAiBvC,KAAKgC,GAAQA,EAAIpD,YAEtD,KACA,OAIN,wBAAQpD,QAAS,IAAMd,EAAMqJ,aAAaxB,EAAiBvC,KAAKgC,GAAQA,EAAIpD,YAA5E,iCAKN0C,EAAU0C,aAAe,CACvBrG,SAAU,CAAC,CACT,IAAO,oBACP,aAAgB,8BAChB,KAAQ,OCtGZ,SAASsG,EAAgBhE,GAOvB,MAAO,CACL,IAPiBA,EAAMhD,IAAIiD,QAAQ,UAAW,IAQ9C,aAPaD,EAAMiE,aAAaC,WAQhC,KAjBJ,SAAqBC,GAEnB,GAAa,GAATA,EAAY,MAAO,SACvB,IAAIvE,EAAIwE,SAASC,KAAKC,MAAMD,KAAKE,IAAIJ,GAASE,KAAKE,IAAI,QACvD,OAAOF,KAAKG,MAAML,EAAQE,KAAKI,IAAI,KAAM7E,GAAI,GAAK,IAHtC,CAAC,QAAS,KAAM,KAAM,KAAM,MAGsBA,GAOjD8E,CADF1E,EAAM2E,MAEOT,YAQX,MAAMU,UAAoBtK,YAAW,eAAD,iCAEjDmD,MAAQ,CACNoH,UAAW,GACXC,UAAW,GACX3H,SAAU,GACV4H,UAAW,GACXnH,OAAQ,QACRoH,UAAW,QACXC,SAAU,IATqC,KAYjDnB,aAZiD,uCAYlC,WAAOJ,GAAP,iBAAAxH,EAAA,6DAEPsC,EAAY,EAAKf,MAAMwH,SACb,WACH,UACTC,EAAO,EALE,SAQPrI,QAAQsI,IACZzB,EAAK3D,IAAL,uCAAS,WAAgBC,GAAhB,mBAAA9D,EAAA,6DAEDkJ,EAAWpF,EAAMhD,IACjBqI,EAHC,kBAGyB7G,EAHzB,mBAG6C4G,GAE9CnI,EAAS,CACbC,QAAS,CACP,eAAgB,oBAElBC,UAAU,EACVC,sBAAuB,CACrBC,OAAQ,cACRL,IAAKqI,IAZF,SAgBD/H,IAAIgI,IAtBE,WACH,UAqBoBrI,GAhBtB,OAiBPiI,EAAKhH,UAAUqH,IACN,CACLR,UAAWQ,EAAaR,UAAUS,QAAO,SAASC,EAAOC,GAIvD,OAHIA,EAAO1I,MAAQoI,GACjBK,EAAM1G,KAAK2G,GAEND,IACN,QAxBA,2CAAT,wDATW,2CAZkC,2DAqDjDE,YAAc,KACZC,QAAQrB,IAAI,UAAU/J,KAAKqL,OAAOC,MAAM,GAAGC,MAC3CH,QAAQrB,IAAI,UAAU/J,KAAKqL,OAAOC,MAAM,GAAG7E,MAC3C9E,IAAQ6J,IAAR,iBACYxL,KAAKqL,OAAOC,MAAM,GAAGC,MAC/BvL,KAAKqL,OAAOC,MAAM,GAClB,CAAEG,YAAazL,KAAKqL,OAAOC,MAAM,GAAG7E,KAAM5E,MAAO,YACjD4B,MAAK,KACLzD,KAAKqL,OAAS,KACdrL,KAAK0D,UAAS,MACZf,SAAU,8BAEZ3C,KAAK2D,gBACJ+H,OAAMC,IACP3L,KAAK0D,SAAS,CAAEf,SAAS,0BAAD,OAA4BgJ,SAnEP,KAuEjDhI,WAAa,KACXhC,IAAQiD,KAAK,UAAW,CAAE/C,MAAO,YAC9B4B,MAAKQ,IACJ,MACMsG,EADYtF,OAAOC,OAAOjB,GACJsB,IAAIiE,GAEhCxJ,KAAK0D,SAAS,CACZ6G,cAEFvK,KAAK0D,SAAS,CACZN,QAAQ,QAjFiC,KAsFjDuC,kBAAoB,KAClB3F,KAAK2D,aACLJ,IAAKC,kBACFC,MAAKd,IACJyI,QAAQrB,IAAI,UAAWpH,GACvB3C,KAAK0D,SAAS,CACZ+G,SAAU9H,EAAS9B,SAK3Bd,SACE,OACE,cAAC,WAAD,UACE,yBAASM,UAAU,UAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,oDACA,uBACEoG,KAAK,OACLmF,OAAO,wBACP7D,MAAO,CAAE8D,QAAS,QAClB5F,IAAKA,GAAQjG,KAAKqL,OAASpF,EAC3B6F,SAAU,IACR9L,KAAK0D,SAAS,CACZ4G,UAAWtK,KAAKqL,OAAOC,MAAM,GAC7BjB,UAAWrK,KAAKqL,OAAOC,MAAM,GAAGC,SAItC,uBAAOQ,MAAO/L,KAAKiD,MAAMoH,UAAW2B,YAAY,cAAcF,SAAW9K,IAAOhB,KAAKiM,aAAajL,MAClG,wBACED,QAAS,KACPf,KAAKqL,OAAOU,MAAQ,KACpB/L,KAAKqL,OAAOa,SAEdC,QAASnM,KAAKiD,MAAMuH,UALtB,oBAUA,wBAAQzJ,QAASf,KAAKmL,YAAtB,6BAEGnL,KAAKiD,MAAMN,UAAY,8BAAM3C,KAAKiD,MAAMN,cAE7C,uBACC3C,KAAKiD,MAAMG,QAAU,cAACyD,EAAD,CAAW3D,SAAUlD,KAAKiD,MAAMsH,UAAWjB,aAActJ,KAAKsJ,uBC1JjF,MAAM8C,UAAqBtM,YAAW,eAAD,oBAElDmD,MAAQ,CACNoJ,MAAO,GACPrI,UAAW,GACXlD,SAAU,GACVqL,SAAS,GAGXxG,oBACEpC,IAAKC,kBACFC,MAAKd,IACJ3C,KAAK0D,SAAS,CACZ2I,MAAO1J,EAAS2J,WAAWD,MAC3BrI,UAAWrB,EAAS9B,GACpBC,SAAU6B,EAAS7B,SACnBqL,SAAS,OAKjBpM,SACE,OACE,cAAC,WAAD,UACE,yBAASM,UAAU,UAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,+CACA,mBAAGA,UAAU,gBAAb,6CACA,uBACA,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,sBAAMwC,OAAO,kBAAb,SACE,uBAAO4D,KAAK,SAASsF,MAAM,sBAE7B,uBAEE/L,KAAKiD,MAAMkJ,QACT,+CAEE,iCACE,+BAAI,+CAAJ,IAAgCnM,KAAKiD,MAAMnC,YAC3C,+BAAI,oDAAJ,IAAqCd,KAAKiD,MAAMoJ,SAChD,+BAAI,kDAAJ,IAAmCrM,KAAKiD,MAAMe,6BCNvDuI,MApCf,SAAoBtM,GAClB,OACEA,EAAMuM,aACLvM,EAAMuM,WAAWC,YAAcxM,EAAMuM,WAAWE,eAG/C,sBAAKrM,UAAU,iCAAf,UACE,qBAAKA,UAAU,6BAAf,SACGJ,EAAMuM,WAAWE,cACd,uDACA,KAEN,qBAAKrM,UAAU,4CAAf,SACGJ,EAAMuM,WAAWC,WAAa,0BAA4B,QAIxDxM,EAAM0M,UAEb,qBAAKtM,UAAU,iCAAf,SACE,qBAAKA,UAAU,6BAAf,SAA6CJ,EAAM0M,cAG9C1M,EAAMuM,YAAcvM,EAAMuM,WAAWI,QAE5C,qBAAKvM,UAAU,iCAAf,SACE,qBAAKA,UAAU,6BAAf,SACGJ,EAAMuM,WAAWI,QAAQC,YAKzB,yBC0BIC,MA5Df,SAAsBC,EAAO9J,GAE3B,MAAM+J,EAASC,SAASC,uBAAuB,aAE/C,IAAK,IAAI9H,EAAI,EAAGA,EAAI4H,EAAO7D,OAAQ/D,IAC5B4H,EAAO5H,GAAG+H,UAAUC,SAAS,UAChCJ,EAAO5H,GAAG+H,UAAUE,OAAO,aAK/B,OAAIpK,EAAMnC,UAAsC,KAA1BmC,EAAMnC,SAASwM,QACnCL,SAASM,eAAe,YAAYJ,UAAUK,IAAI,aAC3C,CAAEf,YAAY,IAEnBxJ,EAAMwK,WAAwC,KAA3BxK,EAAMwK,UAAUH,QACrCL,SAASM,eAAe,aAAaJ,UAAUK,IAAI,aAC5C,CAAEf,YAAY,IAEnBxJ,EAAMyK,UAAsC,KAA1BzK,EAAMyK,SAASJ,QACnCL,SAASM,eAAe,YAAYJ,UAAUK,IAAI,aAC3C,CAAEf,YAAY,IAEnBxJ,EAAMoJ,OAAgC,KAAvBpJ,EAAMoJ,MAAMiB,QAC7BL,SAASM,eAAe,SAASJ,UAAUK,IAAI,aACxC,CAAEf,YAAY,IAEnBxJ,EAAM0K,kBAAsD,KAAlC1K,EAAM0K,iBAAiBL,QACnDL,SAASM,eAAe,oBAAoBJ,UAAUK,IAAI,aACnD,CAAEf,YAAY,IAEnBxJ,EAAM2K,UAAsC,KAA1B3K,EAAM2K,SAASN,QACnCL,SAASM,eAAe,YAAYJ,UAAUK,IAAI,aAC3C,CAAEf,YAAY,IAEnBxJ,EAAM4K,aAA4C,KAA7B5K,EAAM4K,YAAYP,QACzCL,SAASM,eAAe,eAAeJ,UAAUK,IAAI,aAC9C,CAAEf,YAAY,IAEnBxJ,EAAM6K,aAA4C,KAA7B7K,EAAM6K,YAAYR,QACzCL,SAASM,eAAe,eAAeJ,UAAUK,IAAI,aAC9C,CAAEf,YAAY,IAEnBxJ,EAAM8K,iBAAoD,KAAjC9K,EAAM8K,gBAAgBT,QACjDL,SAASM,eAAe,mBAAmBJ,UAAUK,IAAI,aAClD,CAAEf,YAAY,IAEnBxJ,EAAM2K,UAAY3K,EAAM8K,iBAAmB9K,EAAM2K,WAAa3K,EAAM8K,iBACtEd,SAASM,eAAe,YAAYJ,UAAUK,IAAI,aAClDP,SAASM,eAAe,mBAAmBJ,UAAUK,IAAI,aAClD,CAAEd,eAAe,IAEtBzJ,EAAM6K,aAAe7K,EAAM8K,iBAAmB9K,EAAM6K,cAAgB7K,EAAM8K,iBAC5Ed,SAASM,eAAe,eAAeJ,UAAUK,IAAI,aACrDP,SAASM,eAAe,mBAAmBJ,UAAUK,IAAI,aAClD,CAAEd,eAAe,SAH1B,GC/CF,MAAMsB,UAAclO,YAAW,eAAD,iCAC5BmD,MAAQ,CACNnC,SAAU,GACV8M,SAAU,GACVK,OAAQ,CACNrB,QAAS,KACTH,YAAY,IANY,KAU5ByB,gBAAkB,KAChBlO,KAAK0D,SAAS,CACZuK,OAAQ,CACNrB,QAAS,KACTH,YAAY,MAdU,KAmB5B0B,aAnB4B,uCAmBb,WAAMpB,GAAN,iBAAArL,EAAA,6DACbqL,EAAM9L,iBAGN,EAAKiN,mBACCE,EAAQC,EAAStB,EAAO,EAAK9J,SAEjC,EAAKS,SAAS,CACZuK,OAAO,2BAAM,EAAKhL,MAAMgL,QAAWG,KAR1B,kBAcL,EAAKnO,MAAMqO,YAAY,EAAKrL,MAAMnC,SAAU,EAAKmC,MAAM2K,UAdlD,OAeX,EAAK3N,MAAMsO,QAAQhK,KAAK,KAfb,kDAiBPoH,EAAM,KACoCA,EAA7C,KAAMkB,QAA0C,KAA1B,CAAE,QAAU,EAAV,IACzB,EAAKnJ,SAAS,CACZuK,OAAO,2BACF,EAAKhL,MAAMgL,QADV,IAEJrB,QAASjB,MAtBF,0DAnBa,2DA+C5B6C,cAAgBzB,IACd/M,KAAK0D,SAAS,CACZ,CAACqJ,EAAM0B,OAAO5N,IAAKkM,EAAM0B,OAAO1C,QAElCkB,SAASM,eAAeR,EAAM0B,OAAO5N,IAAIsM,UAAUE,OAAO,cAG5DtN,SACE,OACE,yBAASM,UAAU,eAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,wCACA,cAAC,EAAD,CAAYmM,WAAYxM,KAAKiD,MAAMgL,SAEnC,uBAAMS,SAAU1O,KAAKmO,aAArB,UACE,qBAAK9N,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,uBACEA,UAAU,QACVoG,KAAK,OACL5F,GAAG,WACH8N,mBAAiB,eACjB3C,YAAY,0BACZD,MAAO/L,KAAKiD,MAAMnC,SAClBgL,SAAU9L,KAAKwO,oBAIrB,qBAAKnO,UAAU,QAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACEA,UAAU,QACVoG,KAAK,WACL5F,GAAG,WACHmL,YAAY,WACZD,MAAO/L,KAAKiD,MAAM2K,SAClB9B,SAAU9L,KAAKwO,gBAEjB,sBAAMnO,UAAU,wBAAhB,SACE,mBAAGA,UAAU,uBAInB,qBAAKA,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,mBAAGG,KAAK,kBAAR,kCAGJ,qBAAKH,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,wBAAQA,UAAU,oBAAlB,gCAYD2N,QC5Gf,MAAMY,UAAiB9O,YAAW,eAAD,iCAC/BmD,MAAQ,CACNnC,SAAU,GACVuL,MAAO,GACPuB,SAAU,GACVG,gBAAiB,GACjBE,OAAQ,CACNrB,QAAS,KACTH,YAAY,EACZC,eAAe,IATY,KAa/BwB,gBAAkB,KAChBlO,KAAK0D,SAAS,CACZuK,OAAQ,CACNrB,QAAS,KACTH,YAAY,EACZC,eAAe,MAlBU,KAuB/ByB,aAvB+B,uCAuBhB,WAAMpB,GAAN,2BAAArL,EAAA,6DACbqL,EAAM9L,iBAGN,EAAKiN,mBACCE,EAAQC,EAAStB,EAAO,EAAK9J,SAGjC,EAAKS,SAAS,CACZuK,OAAO,2BAAM,EAAKhL,MAAMgL,QAAWG,KAT1B,EAcyB,EAAKnL,MAAnCnC,EAdK,EAcLA,SAAUuL,EAdL,EAcKA,MAAOuB,EAdZ,EAcYA,SAdZ,kBAiBkBrK,IAAKsL,OAAO,CACvC/N,WACA8M,WACAtB,WAAY,CACVD,MAAOA,KArBA,OAiBLyC,EAjBK,OAwBX1D,QAAQrB,IAAI+E,GACZ,EAAK7O,MAAMsO,QAAQhK,KAAK,UAAW,CAAEzD,aAzB1B,kDA2BP6K,EAAM,KACoCA,EAA7C,KAAMkB,QAA0C,KAA1B,CAAE,QAAU,EAAV,IACzB,EAAKnJ,SAAS,CACZuK,OAAO,2BACF,EAAKhL,MAAMgL,QADV,IAEJrB,QAASjB,MAhCF,0DAvBgB,2DA6D/B6C,cAAgBzB,IACd/M,KAAK0D,SAAS,CACZ,CAACqJ,EAAM0B,OAAO5N,IAAKkM,EAAM0B,OAAO1C,QAElCkB,SAASM,eAAeR,EAAM0B,OAAO5N,IAAIsM,UAAUE,OAAO,cAG5DtN,SACE,OACE,yBAASM,UAAU,eAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,0CACA,cAAC,EAAD,CAAYmM,WAAYxM,KAAKiD,MAAMgL,SAEnC,uBAAMS,SAAU1O,KAAKmO,aAArB,UACE,qBAAK9N,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,uBACEA,UAAU,QACVoG,KAAK,OACL5F,GAAG,WACH8N,mBAAiB,eACjB3C,YAAY,iBACZD,MAAO/L,KAAKiD,MAAMnC,SAClBgL,SAAU9L,KAAKwO,oBAIrB,qBAAKnO,UAAU,QAAf,SACE,oBAAGA,UAAU,yCAAb,UACE,uBACEA,UAAU,QACVoG,KAAK,QACL5F,GAAG,QACH8N,mBAAiB,YACjB3C,YAAY,cACZD,MAAO/L,KAAKiD,MAAMoJ,MAClBP,SAAU9L,KAAKwO,gBAEjB,sBAAMnO,UAAU,wBAAhB,SACE,mBAAGA,UAAU,2BAInB,qBAAKA,UAAU,QAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACEA,UAAU,QACVoG,KAAK,WACL5F,GAAG,WACHmL,YAAY,WACZD,MAAO/L,KAAKiD,MAAM2K,SAClB9B,SAAU9L,KAAKwO,gBAEjB,sBAAMnO,UAAU,wBAAhB,SACE,mBAAGA,UAAU,uBAInB,qBAAKA,UAAU,QAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACEA,UAAU,QACVoG,KAAK,WACL5F,GAAG,kBACHmL,YAAY,mBACZD,MAAO/L,KAAKiD,MAAM8K,gBAClBjC,SAAU9L,KAAKwO,gBAEjB,sBAAMnO,UAAU,wBAAhB,SACE,mBAAGA,UAAU,uBAInB,qBAAKA,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,mBAAGG,KAAK,kBAAR,kCAGJ,qBAAKH,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,wBAAQA,UAAU,oBAAlB,mCAYDuO,QC1Jf,MAAMG,UAAuBjP,YAAW,eAAD,iCACrCmD,MAAQ,CACNoJ,MAAO,GACP4B,OAAQ,CACNrB,QAAS,KACTH,YAAY,IALqB,KASrCyB,gBAAkB,KAChBlO,KAAK0D,SAAS,CACZuK,OAAQ,CACNrB,QAAS,KACTH,YAAY,MAbmB,KAkBrCuC,sBAlBqC,uCAkBb,WAAMjC,GAAN,eAAArL,EAAA,6DACtBqL,EAAM9L,iBAGN,EAAKiN,mBACCE,EAAQC,EAAStB,EAAO,EAAK9J,SAEjC,EAAKS,SAAS,CACZuK,OAAO,2BAAM,EAAKhL,MAAMgL,QAAWG,KARjB,kBAcd7K,IAAK0L,eAAe,EAAKhM,MAAMoJ,OAdjB,OAepB,EAAKpM,MAAMsO,QAAQhK,KAAK,+BAfJ,kDAiBpB6G,QAAQrB,IAAR,MAjBoB,0DAlBa,2DAuCrCyE,cAAgBzB,IACd/M,KAAK0D,SAAS,CACZ,CAACqJ,EAAM0B,OAAO5N,IAAKkM,EAAM0B,OAAO1C,QAElCkB,SAASM,eAAeR,EAAM0B,OAAO5N,IAAIsM,UAAUE,OAAO,cAG5DtN,SACE,OACE,yBAASM,UAAU,eAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,uDACA,uIAIA,cAAC,EAAD,CAAYmM,WAAYxM,KAAKiD,MAAMgL,SAEnC,uBAAMS,SAAU1O,KAAKgP,sBAArB,UACE,qBAAK3O,UAAU,QAAf,SACE,oBAAGA,UAAU,yCAAb,UACE,uBACEoG,KAAK,QACLpG,UAAU,QACVQ,GAAG,QACH8N,mBAAiB,YACjB3C,YAAY,cACZD,MAAO/L,KAAKiD,MAAMoJ,MAClBP,SAAU9L,KAAKwO,gBAEjB,sBAAMnO,UAAU,wBAAhB,SACE,mBAAGA,UAAU,2BAInB,qBAAKA,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,mBAAGG,KAAK,kBAAR,kCAGJ,qBAAKH,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,wBAAQA,UAAU,oBAAlB,iCAYD0O,QC7Ff,MAAMG,UAAmCpP,YAAW,eAAD,iCACjDmD,MAAQ,CACN0K,iBAAkB,GAClBtB,MAAO,GACPyB,YAAa,GACbG,OAAQ,CACNrB,QAAS,KACTH,YAAY,IAPiC,KAWjDyB,gBAAkB,KAChBlO,KAAK0D,SAAS,CACZuK,OAAQ,CACNrB,QAAS,KACTH,YAAY,MAf+B,KAoBjD0C,4BApBiD,uCAoBnB,WAAMpC,GAAN,eAAArL,EAAA,6DAC5BqL,EAAM9L,iBAGN,EAAKiN,mBACCE,EAAQC,EAAStB,EAAO,EAAK9J,SAEjC,EAAKS,SAAS,CACZuK,OAAO,2BAAM,EAAKhL,MAAMgL,QAAWG,KARX,kBAcpB7K,IAAK6L,qBACT,EAAKnM,MAAMoJ,MACX,EAAKpJ,MAAM0K,iBACX,EAAK1K,MAAM6K,aAjBa,OAmB1B,EAAK7N,MAAMsO,QAAQhK,KAAK,+BAnBE,kDAqB1B6G,QAAQrB,IAAR,MArB0B,0DApBmB,2DA6CjDyE,cAAgBzB,IACd/M,KAAK0D,SAAS,CACZ,CAACqJ,EAAM0B,OAAO5N,IAAKkM,EAAM0B,OAAO1C,QAElCkB,SAASM,eAAeR,EAAM0B,OAAO5N,IAAIsM,UAAUE,OAAO,cAG5DtN,SACE,OACE,yBAASM,UAAU,eAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,kDACA,4IAIA,cAAC,EAAD,CAAYmM,WAAYxM,KAAKiD,MAAMgL,SAEnC,uBAAMS,SAAU1O,KAAKmP,4BAArB,UACE,qBAAK9O,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,uBACEoG,KAAK,OACLpG,UAAU,QACVQ,GAAG,mBACH8N,mBAAiB,uBACjB3C,YAAY,0BACZD,MAAO/L,KAAKiD,MAAM0K,iBAClB7B,SAAU9L,KAAKwO,oBAIrB,qBAAKnO,UAAU,QAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACEA,UAAU,QACVoG,KAAK,QACL5F,GAAG,QACH8N,mBAAiB,YACjB3C,YAAY,cACZD,MAAO/L,KAAKiD,MAAMoJ,MAClBP,SAAU9L,KAAKwO,gBAEjB,sBAAMnO,UAAU,wBAAhB,SACE,mBAAGA,UAAU,2BAInB,qBAAKA,UAAU,QAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACEoG,KAAK,WACLpG,UAAU,QACVQ,GAAG,cACHmL,YAAY,eACZD,MAAO/L,KAAKiD,MAAM6K,YAClBhC,SAAU9L,KAAKwO,gBAEjB,sBAAMnO,UAAU,wBAAhB,SACE,mBAAGA,UAAU,uBAInB,qBAAKA,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,wBAAQA,UAAU,oBAAlB,iCAYD6O,QC1Hf,MAAMG,UAAuBvP,YAAW,eAAD,iCACrCmD,MAAQ,CACN4K,YAAa,GACbC,YAAa,GACbC,gBAAiB,GACjBE,OAAQ,CACNrB,QAAS,KACTH,YAAY,EACZC,eAAe,IARkB,KAYrCwB,gBAAkB,KAChBlO,KAAK0D,SAAS,CACZuK,OAAQ,CACNrB,QAAS,KACTH,YAAY,EACZC,eAAe,MAjBgB,KAsBrCyB,aAtBqC,uCAsBtB,WAAMpB,GAAN,mBAAArL,EAAA,6DACbqL,EAAM9L,iBAGN,EAAKiN,mBACCE,EAAQC,EAAStB,EAAO,EAAK9J,SAGjC,EAAKS,SAAS,CACZuK,OAAO,2BAAM,EAAKhL,MAAMgL,QAAWG,KAT1B,kBAeQ7K,IAAK+L,2BAfb,cAeLnP,EAfK,OAgBXiL,QAAQrB,IAAI5J,GAhBD,UAiBLoD,IAAKgM,eACTpP,EACA,EAAK8C,MAAM4K,YACX,EAAK5K,MAAM6K,aApBF,QAsBX,EAAK7N,MAAMsO,QAAQhK,KAAK,+BAtBb,kDAwBPoH,EAAM,KACoCA,EAA7C,KAAMkB,QAA0C,KAA1B,CAAE,QAAU,EAAV,IACzB,EAAKnJ,SAAS,CACZuK,OAAO,2BAAM,EAAKhL,MAAMgL,QAAlB,IAA0BrB,QAASjB,MAE3CP,QAAQrB,IAAI4B,GA7BD,0DAtBsB,2DAuDrC6C,cAAgBzB,IACd/M,KAAK0D,SAAS,CACZ,CAACqJ,EAAM0B,OAAO5N,IAAKkM,EAAM0B,OAAO1C,QAElCkB,SAASM,eAAeR,EAAM0B,OAAO5N,IAAIsM,UAAUE,OAAO,cAG5DtN,SACE,OACE,yBAASM,UAAU,eAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,iDACA,cAAC,EAAD,CAAYmM,WAAYxM,KAAKiD,MAAMgL,SAEnC,uBAAMS,SAAU1O,KAAKmO,aAArB,UACE,qBAAK9N,UAAU,QAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACEA,UAAU,QACVoG,KAAK,WACL5F,GAAG,cACHmL,YAAY,eACZD,MAAO/L,KAAKiD,MAAM4K,YAClB/B,SAAU9L,KAAKwO,gBAEjB,sBAAMnO,UAAU,wBAAhB,SACE,mBAAGA,UAAU,uBAInB,qBAAKA,UAAU,QAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACEA,UAAU,QACVoG,KAAK,WACL5F,GAAG,cACHmL,YAAY,eACZD,MAAO/L,KAAKiD,MAAM6K,YAClBhC,SAAU9L,KAAKwO,gBAEjB,sBAAMnO,UAAU,wBAAhB,SACE,mBAAGA,UAAU,uBAInB,qBAAKA,UAAU,QAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACEA,UAAU,QACVoG,KAAK,WACL5F,GAAG,kBACHmL,YAAY,mBACZD,MAAO/L,KAAKiD,MAAM8K,gBAClBjC,SAAU9L,KAAKwO,gBAEjB,sBAAMnO,UAAU,wBAAhB,SACE,mBAAGA,UAAU,uBAInB,qBAAKA,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,mBAAGG,KAAK,kBAAR,kCAGJ,qBAAKH,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,wBAAQA,UAAU,oBAAlB,0CAYDgP,QC1If,MAAMG,UAAmC1P,YACvCC,SACE,OACE,yBAASM,UAAU,eAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,iDACA,mFAOKmP,QCbA,SAASC,KAMtB,OAJAC,YAAW,KACTC,OAAOC,SAASpP,KAAO,WACtB,KAGD,yBAASH,UAAU,eAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,0CACA,gFACA,+HAAiG,mBAAGG,KAAK,SAAR,gCCX1F,SAASqP,KACtB,OACE,wBAAQxP,UAAU,SAAlB,SACE,qBAAKA,UAAU,4BAAf,SACE,oJCAR,MAAMyP,WAAsBhQ,YAAW,eAAD,iCACpCmD,MAAQ,CACNnC,SAAU,GACV6M,iBAAkB,GAClBM,OAAQ,CACNrB,QAAS,KACTH,YAAY,IANoB,KAkBpCyB,gBAAkB,KAChBlO,KAAK0D,SAAS,CACZuK,OAAQ,CACNrB,QAAS,KACTH,YAAY,MAtBkB,KA2BpC0B,aA3BoC,uCA2BrB,WAAMpB,GAAN,iBAAArL,EAAA,6DACbqL,EAAM9L,iBAGN,EAAKiN,mBACCE,EAAQC,EAAStB,EAAO,EAAK9J,SAEjC,EAAKS,SAAS,CACZuK,OAAO,2BAAM,EAAKhL,MAAMgL,QAAWG,KAR1B,kBAcL7K,IAAKwM,cAAc,EAAK9M,MAAMnC,SAAU,EAAKmC,MAAM0K,kBAd9C,OAeX,EAAK1N,MAAMsO,QAAQhK,KAAK,YAfb,kDAiBPoH,EAAM,KACoCA,EAA7C,KAAMkB,QAA0C,KAA1B,CAAE,QAAU,EAAV,IACzB,EAAKnJ,SAAS,CACZuK,OAAO,2BACF,EAAKhL,MAAMgL,QADV,IAEJrB,QAASjB,MAtBF,0DA3BqB,2DAuDpC6C,cAAgBzB,IACd/M,KAAK0D,SAAS,CACZ,CAACqJ,EAAM0B,OAAO5N,IAAKkM,EAAM0B,OAAO1C,QAElCkB,SAASM,eAAeR,EAAM0B,OAAO5N,IAAIsM,UAAUE,OAAO,cAjD5D1H,oBACE,MAAMqK,EAAgBhQ,KAAKC,MAAM2P,SAAS3M,MAEtC+M,GAAiBA,EAAclP,UACjCd,KAAK0D,SAAS,CAAE5C,SAAUkP,EAAclP,WAgD5Cf,SACE,OACE,yBAASM,UAAU,eAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,8CACA,+HACA,cAAC,EAAD,CAAYmM,WAAYxM,KAAKiD,MAAMgL,SAEnC,uBAAMS,SAAU1O,KAAKmO,aAArB,UACE,qBAAK9N,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,uBACEA,UAAU,QACVoG,KAAK,OACL5F,GAAG,WACH8N,mBAAiB,eACjB3C,YAAY,iBACZD,MAAO/L,KAAKiD,MAAMnC,SAClBgL,SAAU9L,KAAKwO,oBAIrB,qBAAKnO,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,uBACEA,UAAU,QACVoG,KAAK,OACL5F,GAAG,mBACH8N,mBAAiB,uBACjB3C,YAAY,0BACZD,MAAO/L,KAAKiD,MAAM0K,iBAClB7B,SAAU9L,KAAKwO,oBAIrB,qBAAKnO,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,mBAAGG,KAAK,sBAAR,4CAGJ,qBAAKH,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,wBAAQA,UAAU,oBAAlB,yCAYDyP,UCpHf,MAAMG,WAA2BnQ,YAAW,eAAD,iCACzCmD,MAAQ,CACNnC,SAAU,GACVmN,OAAQ,CACNrB,QAAS,KACTH,YAAY,IALyB,KASzCyB,gBAAkB,KAChBlO,KAAK0D,SAAS,CACZuK,OAAQ,CACNrB,QAAS,KACTH,YAAY,MAbuB,KAkBzC0B,aAlByC,uCAkB1B,WAAMpB,GAAN,iBAAArL,EAAA,6DACbqL,EAAM9L,iBAGN,EAAKiN,mBACCE,EAAQC,EAAStB,EAAO,EAAK9J,SAEjC,EAAKS,SAAS,CACZuK,OAAO,2BAAM,EAAKhL,MAAMgL,QAAWG,KAR1B,kBAcL7K,IAAK2M,aAAa,EAAKjN,MAAMnC,UAdxB,OAeX,EAAKb,MAAMsO,QAAQhK,KAAK,UAAW,CAAEzD,SAAU,EAAKmC,MAAMnC,WAf/C,kDAiBP6K,EAAM,KACoCA,EAA7C,KAAMkB,QAA0C,KAA1B,CAAE,QAAU,EAAV,IACzB,EAAKnJ,SAAS,CACZuK,OAAO,2BACF,EAAKhL,MAAMgL,QADV,IAEJrB,QAASjB,MAtBF,0DAlB0B,2DA8CzC6C,cAAgBzB,IACd/M,KAAK0D,SAAS,CACZ,CAACqJ,EAAM0B,OAAO5N,IAAKkM,EAAM0B,OAAO1C,QAElCkB,SAASM,eAAeR,EAAM0B,OAAO5N,IAAIsM,UAAUE,OAAO,cAG5DtN,SACE,OACE,yBAASM,UAAU,eAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,0DACA,cAAC,EAAD,CAAYmM,WAAYxM,KAAKiD,MAAMgL,SAEnC,uBAAMS,SAAU1O,KAAKmO,aAArB,UACE,qBAAK9N,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,uBACEA,UAAU,QACVoG,KAAK,OACL5F,GAAG,WACH8N,mBAAiB,eACjB3C,YAAY,iBACZD,MAAO/L,KAAKiD,MAAMnC,SAClBgL,SAAU9L,KAAKwO,oBAIrB,qBAAKnO,UAAU,QAAf,SACE,mBAAGA,UAAU,UAAb,SACE,wBAAQA,UAAU,oBAAlB,6CAYD4P,UCtEfE,IAAQ3C,IAAI4C,KAEZ,MAAMC,GAAiB,IAA6D,IAA/CC,EAA8C,EAAzDC,UAAiBC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,KAASvK,EAAW,0DAEjF,MAAMwK,EAAW5Q,GAAW,cAAC,IAAD,yBAAO2Q,KAAMA,GAAUvK,GAAvB,IAA6BpG,OAAQA,KAC3D6Q,EAAW,CAACC,EAAIzC,IAAUuC,GAAQ,IAC/B,cAAC,IAAD,CACLE,GAAI,CACFC,SAAUD,EACV5N,MAAO,CACL8N,aAAcL,EACdtC,cAMR,OAAKoC,EAIAC,EAIEE,GAAS1Q,GAAU,cAACqQ,EAAD,eAAUrQ,MAH3B2Q,EAAS,UAAW,0CAJpBA,EAAS,SAAU,6BAW9B,MAAMI,WAAYlR,YAAW,eAAD,iCAE1BmD,MAAQ,CACN7C,iBAAiB,EACjB6Q,kBAAkB,EAClBC,YAAY,EACZ/Q,KAAM,MANkB,KAS1Be,aAT0B,sBASX,sBAAAQ,EAAA,+EAEL6B,IAAK4N,UAFA,OAGX,EAAKzN,SAAS,CACZvD,KAAM,KACNC,iBAAiB,EACjB6Q,kBAAkB,EAClBC,YAAY,IAPH,+CAUX9F,QAAQrB,IAAI,KAAM8C,SAVP,wDATW,KAuB1ByB,YAvB0B,uCAuBZ,WAAOxN,EAAU8M,GAAjB,eAAAlM,EAAA,+EAES6B,IAAK6N,OAAOtQ,EAAU8M,GAF/B,OAEJzN,EAFI,OAGViL,QAAQrB,IAAI5J,GACZ,EAAKuD,SAAS,CACZvD,KAAMA,EACNC,iBAAiB,IANT,gDASN,KAAMiR,MAAuB,8BAAf,KAAMA,OACtB1B,OAAOC,SAASpP,KAAO,WAEzB4K,QAAQrB,IAAI,KAAM8C,SAZR,yDAvBY,wDAuCpBlH,oBAAqB,IAAD,mJAEApC,IAAK+N,iBAFL,cAEhBC,EAFgB,OAGtB,EAAK7N,SAAS,CACZtD,iBAAiB,IAEnBgL,QAAQrB,IAAIwH,GANU,SAQHhO,IAAK+L,2BARF,OAQhBnP,EARgB,OAStB,EAAKuD,SAAS,CACZvD,SAGEA,EAAKmM,WAAWkF,gBAClB,EAAK9N,SAAS,CACZwN,YAAY,IAfM,kDAmBR,oBAAV,MACF9F,QAAQrB,IAAR,MApBoB,QAwBxB,EAAKrG,SAAS,CAAEuN,kBAAkB,IAxBV,4DA2B1BlR,SACE,MAAM0R,EAAY,CAChBrR,gBAAiBJ,KAAKiD,MAAM7C,gBAC5BD,KAAMH,KAAKiD,MAAM9C,MAEnB,OACGH,KAAKiD,MAAMgO,kBACZ,qBAAK5Q,UAAU,MAAf,SACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,CAAQH,KAAMuR,EAAWvQ,aAAclB,KAAKkB,eAC5C,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwQ,OAAK,EAAChB,KAAK,IAAI3Q,OAASE,GAAU,cAACoB,EAAD,2BAAUpB,GAAV,IAAiBC,KAAMuR,OAEhE,cAACpB,GAAD,CAAgBK,KAAK,UAAUF,SAAUxQ,KAAKiD,MAAM7C,gBAAiBqQ,SAAUzQ,KAAKiD,MAAMiO,WAAYX,UAAWvN,IACjH,cAACqN,GAAD,CAAgBK,KAAK,SAASF,SAAUxQ,KAAKiD,MAAM7C,gBAAiBqQ,SAAUzQ,KAAKiD,MAAMiO,WAAYX,UAAWnG,IAChH,cAACiG,GAAD,CAAgBK,KAAK,WAAWF,SAAUxQ,KAAKiD,MAAM7C,gBAAiBqQ,SAAUzQ,KAAKiD,MAAMiO,WAAYX,UAAWnE,IAClH,cAAC,IAAD,CAAOsF,OAAK,EAAChB,KAAK,SAAS3Q,OAASE,GAAU,cAAC,EAAD,2BAAiBA,GAAjB,IAAwBC,KAAMuR,OAC5E,cAAC,IAAD,CAAOC,OAAK,EAAChB,KAAK,SAAS3Q,OAASE,GAAU,cAAC,EAAD,2BAAWA,GAAX,IAAkBC,KAAMuR,EAAWnD,YAAatO,KAAKsO,iBACnG,cAAC,IAAD,CAAOoD,OAAK,EAAChB,KAAK,UAAU3Q,OAASE,GAAU,cAAC,GAAD,2BAAmBA,GAAnB,IAA0BC,KAAMuR,OAC/E,cAAC,IAAD,CAAOC,OAAK,EAAChB,KAAK,sBAAsB3Q,OAASE,GAAU,cAAC,GAAD,2BAAwBA,GAAxB,IAA+BC,KAAMuR,OAChG,cAAC,IAAD,CAAOC,OAAK,EAAChB,KAAK,YAAY3Q,OAASE,GAAU,cAAC,EAAD,2BAAcA,GAAd,IAAqBC,KAAMuR,OAC5E,cAAC,IAAD,CAAOC,OAAK,EAAChB,KAAK,kBAAkB3Q,OAASE,GAAU,cAAC,EAAD,2BAAoBA,GAApB,IAA2BC,KAAMuR,OACxF,cAAC,IAAD,CAAOC,OAAK,EAAChB,KAAK,8BAA8B3Q,OAASE,GAAU,cAAC,EAAD,2BAAgCA,GAAhC,IAAuCC,KAAMuR,OAChH,cAAC,IAAD,CAAOC,OAAK,EAAChB,KAAK,kBAAkB3Q,OAASE,GAAU,cAAC,EAAD,2BAAoBA,GAApB,IAA2BC,KAAMuR,OACxF,cAAC,IAAD,CAAOC,OAAK,EAAChB,KAAK,8BAA8B3Q,OAASE,GAAU,cAAC0R,EAAD,2BAA2B1R,GAA3B,IAAkCC,KAAMuR,OAC3G,cAAC,IAAD,CAAOC,OAAK,EAAChB,KAAK,WAAW3Q,OAASE,GAAU,cAACwP,GAAD,2BAAaxP,GAAb,IAAoBC,KAAMuR,UAE5E,cAAC5B,GAAD,YAQGmB,U,SC/IKY,QACW,cAA7BjC,OAAOC,SAASiC,UAEe,UAA7BlC,OAAOC,SAASiC,UAEhBlC,OAAOC,SAASiC,SAASC,MACvB,2DCPNC,WAAQC,UAAU,CAChBzO,KAAM,CACJ0O,OAAQjQ,EAAO4K,QAAQsF,OACvBC,WAAYnQ,EAAO4K,QAAQwF,aAC3BC,oBAAqBrQ,EAAO4K,QAAQ0F,cACpCC,eAAgBvQ,EAAO4K,QAAQ4F,kBAEjC7Q,QAAS,CACPsQ,OAAQjQ,EAAO4K,QAAQsF,OACvBnQ,OAAQC,EAAOC,GAAGF,QACpBe,IAAK,CACH2P,UAAW,CACT,CACElH,KAAM,WACNmH,SAAU1Q,EAAO2Q,IAAIC,UACrBlC,KAAM,UACNmC,cAAc,WAAD,4BAAE,sBAAAnR,EAAA,qFAK4B6B,IAAK+N,iBALjC,0BAKmDwB,aAAaC,cALhE,oDAKJC,cALI,kDAAF,kDAAC,QAYtBC,IAASlT,OAAO,cAAC,GAAD,IAASkN,SAASM,eAAe,SD0F3C,kBAAmB2F,WACrBA,UAAUC,cAAcC,MAAM3P,MAAK4P,IACjCA,EAAaC,iB","file":"static/js/main.1c3ed628.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Navbar extends Component {\n\n  render() {\n    const { user, isAuthenticated } = this.props.auth;\n\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"devhour-logo.png\" width=\"112\" height=\"28\" alt=\"aws logo\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <a href=\"/\" className=\"navbar-item\">\n              Home\n            </a>\n            <a href=\"/photos\" className=\"navbar-item\">\n              Photos\n            </a>\n            <a href=\"/admin\" className=\"navbar-item\">\n              Admin\n            </a>\n            <a href=\"/profile\" className=\"navbar-item\">\n              Profile\n            </a>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {isAuthenticated && user && (\n                <p>\n                  Cognito ID: {user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!isAuthenticated && (\n                  <div>\n                    <a href=\"/register\" className=\"button is-primary\">\n                      <strong>Register</strong>\n                    </a>\n                    <a href=\"/login\" className=\"button is-light\">\n                      Log in\n                    </a>\n                  </div>\n                )}\n                {isAuthenticated && (\n                  <a href=\"/\" onClick={(e) => { e.preventDefault(); this.props.handleLogOut(); }} className=\"button is-light\">\n                    Log out\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\n\nexport default function Hero() {\n  return (\n    <section className=\"hero is-primary\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <img src=\"devhour-banner.jpg\" alt=\"AWS DEV Hour\" />\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React from 'react';\n\nexport default function HomeContent() {\n  return (\n    <section className=\"container\">\n      <div className=\"columns features\">\n        <div className=\"column is-4\">\n          <div className=\"card is-shady\">\n            <div className=\"card-content\">\n              <div className=\"content\">\n                <h4>We use Amazon Rekognition</h4>\n                <p>Amazon Rekognition makes it easy to add image and video analysis to your applications using proven, highly scalable, deep learning technology that requires no machine learning expertise to use. With Amazon Rekognition, you can identify objects, people, text, scenes, and activities in images and videos, as well as detect any inappropriate content. Amazon Rekognition also provides highly accurate facial analysis and facial search capabilities that you can use to detect, analyze, and compare faces for a wide variety of user verification, people counting, and public safety use cases.</p>\n                <p><a href=\"https://aws.amazon.com/rekognition/\">Learn more</a></p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column is-4\">\n          <div className=\"card is-shady\">\n            <div className=\"card-content\">\n              <div className=\"content\">\n                <h4>Photos stored in Amazon S3</h4>\n                <p>Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance. This means customers of all sizes and industries can use it to store and protect any amount of data for a range of use cases, such as data lakes, websites, mobile applications, backup and restore, archive, enterprise applications, IoT devices, and big data analytics. Amazon S3 provides easy-to-use management features so you can organize your data and configure finely-tuned access controls to meet your specific business, organizational, and compliance requirements. Amazon S3 is designed for 99.999999999% (11 9's) of durability, and stores data for millions of applications for companies all around the world.</p>\n                <p><a href=\"https://aws.amazon.com/s3/\">Learn more</a></p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column is-4\">\n          <div className=\"card is-shady\">\n            <div className=\"card-content\">\n              <div className=\"content\">\n                <h4>Amazon DynamoDB</h4>\n                <p>DynamoDB supports some of the world’s largest scale applications by providing consistent, single-digit millisecond response times at any scale. You can build applications with virtually unlimited throughput and storage. DynamoDB global tables replicate your data across multiple AWS Regions to give you fast, local access to data for your globally distributed applications. For use cases that require even faster access with microsecond latency, DynamoDB Accelerator (DAX) provides a fully managed in-memory cache.</p>\n                <p><a href=\"https://aws.amazon.com/dynamodb/\">Learn more</a></p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Hero from './home/Hero';\nimport HomeContent from './home/HomeContent';\n\nexport default function Home() {\n  return (\n    <Fragment>\n      <Hero />\n      <div className=\"box cta\">\n        <p className=\"has-text-centered\">\n          <span className=\"tag is-primary\">NEW</span> Upload your photographs to have objects recognised automatically!\n        </p>\n      </div>\n      <HomeContent />\n    </Fragment>\n  );\n}\n","import React, { Component, Fragment } from 'react';\nimport { API, Storage, Auth } from 'aws-amplify';\nimport ImageGallery from 'react-image-gallery';\nimport config from '../../config';\n\nlet images = [];  \n\nasync function getPresignedURLS(orig, thumb) {\n  let presignOriginal = await Storage.get(orig, { level: 'private' });\n  let presignThumb = await Storage.get(thumb, { level: 'private', bucket:  config.s3.thumbBucket});\n  let results = [ presignOriginal, presignThumb];\n  return Promise.resolve(results);\n}\n\nasync function getPhotoLabels(key) {\n  const apiName = 'imageAPI';\n  const path = '/images'; \n\n  const myInit = { // OPTIONAL\n    headers: { \n      'Content-Type': 'application/json'\n    },\n    response: true, // OPTIONAL (return the entire Axios response object instead of only response.data)\n    queryStringParameters: {  // OPTIONAL\n      action: 'getLabels',\n      key: key\n    },\n  };\n\n  let apiResponse = await API.get(apiName, path, myInit);\n  let results = [ apiResponse ];\n\n  return Promise.resolve(results);\n}\n\nexport default class Photos extends Component {\n\n  state = {\n    response: '',\n    filelist: '',\n    cognitoSub: '',\n    loaded: false,\n    pr: ''\n  };\n\n  getId = () => {\n    Auth.currentUserInfo()\n      .then(response => {\n        // console.log(response.id)\n        this.setState({cognitoSub: response.id});\n      });\n  }\n\n  listImages = async () => {\n    \n    const result = await Storage.list('photos/', { level: 'private' });\n      \n    let fileArray = Object.values(result);\n    const cognitoID = this.state.cognitoSub;\n\n    const fileNames = fileArray.map(function (image) { \n      return image.key.replace('photos/', ''); \n    });\n\n    this.setState({ filelist: fileNames });\n\n    // console.log(fileNames)\n\n    fileNames.forEach(addImagesToList);\n\n    function addImagesToList(filename) {\n\n      let orig = 'photos/'.concat(filename);\n      let fullName = 'private/'.concat(cognitoID).concat('/photos/').concat(filename);\n      getPresignedURLS(orig, orig)\n        .then (result => { \n          let originalImageSigned = result[0];\n          let thumbImageSigned = result[1];\n          let currentImg = {\n            original: originalImageSigned,\n            thumbnail: thumbImageSigned,\n            description: 'Testing Description',\n            isSelected: false,\n          };\n          images.push(currentImg);\n\n          getPhotoLabels(fullName)\n            .then (result => {  \n\n              let allLabels = result[0].data;\n              // console.log(allLabels)\n              if (allLabels) {\n                let labelsDetected = Object.values(allLabels);\n\n                const filterLabels = (cut, list) =>\n                  list.filter(label => !label.includes(cut));\n\n                let filtered = filterLabels('private', labelsDetected).join(' * ');\n                for (let i in images) {\n                  if (images[i].original.includes(filename)) {\n                    images[i].description = filtered;\n                    break; //Stop this loop, we found it!\n                  }\n                }\n              }\n            });\n        }); \n\n    }\n    this.setState({pr: true});\n\n\n  };\n\n  componentDidMount = async () => {\n    this.getId();\n    this.listImages();\n    this.setState({loaded: true});\n  }\n    \n  render() {\n    return (\n      <Fragment>\n        <section className=\"section\">\n          <div className=\"container\">\n            <h1>Your Photos</h1>\n            <p className=\"subtitle is-5\">Review your photographs and labels</p>\n            <br />\n            <div className=\"columns\">\n              <div className=\"column\">\n                {this.state.pr ? <ImageGallery items={images} thumbnailPosition='left' />  : null }\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const Checkbox = React.forwardRef(({ indeterminate, ...rest }, ref) => {\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n\n  React.useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n\n  return (\n    < >\n      <input type='checkbox' ref={resolvedRef} {...rest} />\n    </>\n  );\n});","export const COLUMNS = [\n  {\n    Header: 'Filename',\n    accessor: 'key'\n  },\n  {\n    Header: 'Last Modified',\n    accessor: 'lastModified'\n  },\n  {\n    Header: 'Size',\n    accessor: 'size'\n  }\n];","import React, { useMemo } from 'react';\nimport { useTable, useSortBy, useRowSelect } from 'react-table';\n\nimport { Checkbox } from './Checkbox';\nimport { COLUMNS } from './columns';\n\nconst RowItem = (row) => (\n  <tr key={row.id} {...row.getRowProps()}>\n    {row.cells.map(cell => (\n      <td\n        key={cell.id}\n        {...cell.getCellProps()}\n        style={{\n          padding: '10px',\n          border: 'solid 1px gray',\n          background: 'white',\n        }}\n      >\n        {cell.render('Cell')}\n      </td>\n    ))}\n  </tr>\n);\n\nexport const FileTable = (props) => {\n\n  const columns = useMemo(() => COLUMNS, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows\n  } = useTable({\n    columns,\n    data: props.filelist\n  },\n  useSortBy, useRowSelect,\n  (hooks) => {\n    hooks.visibleColumns.push((columns) => {\n      return [\n        {\n          key: 'selection',\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <Checkbox {...getToggleAllRowsSelectedProps()} />\n          ),\n          Cell: ({ row }) => <Checkbox {...row.getToggleRowSelectedProps()} />,\n        },\n        ...columns,\n      ];\n    });\n  });\n\n  return (\n    <>\n      <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr key={headerGroup.id} {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th\n                  key={column.id}\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  style={{\n                    borderBottom: 'solid 8px #ff9900',\n                    background: '#1b233c',\n                    color: 'white',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  {column.render('Header')}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' 🔽'\n                        : ' 🔼'\n                      : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return RowItem(row);\n          })}\n        </tbody>\n      </table>\n      <p>Selected Rows: {Object.keys(selectedFlatRows).length}</p>\n      <pre>\n        <code>\n          {JSON.stringify(\n            {\n              selectedFlatRows: selectedFlatRows.map((row) => row.original),\n            },\n            null,\n            2\n          )}\n        </code>\n      </pre>\n      <button onClick={() => props.deleteImages(selectedFlatRows.map((row) => row.original))}> Delete Images </button>\n    </>\n  );\n};\n\nFileTable.defaultProps = {\n  filelist: [{\n    'key': 'no files detected',\n    'lastModified': 'not detected due to no file',\n    'size': '0'\n  }]\n};\n\nexport default FileTable;","import React, { Component, Fragment } from 'react';\nimport { API, Auth, Storage } from 'aws-amplify';\nimport { FileTable } from './table/FileTable';\n\nfunction bytesToSize(bytes) {\n  let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  if (bytes == 0) return '0 Byte';\n  let i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n  return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n}\n\nfunction getImageDetails(image) {\n  let filenameOnly = image.key.replace('photos/', '');\n  let modified = image.lastModified.toString();\n  let size = image.size;\n  let sizeMB = bytesToSize(size);\n  let sizeString = sizeMB.toString();\n\n  return {\n    'key': filenameOnly,\n    'lastModified': modified,\n    'size': sizeString\n  };\n}\nexport default class PhotosAdmin extends Component {\n\n  state = {\n    imageName: '',\n    imageFile: '',\n    response: '',\n    tableData: [],\n    loaded: 'false',\n    uploading: 'false',\n    identity: [],\n  };\n\n  deleteImages = async (keys) => {\n\n    const cognitoID = this.state.identity;\n    const apiName = 'imageAPI';\n    const path = '/images';\n    let that = this;\n    \n\n    await Promise.all(\n      keys.map(async function (image) {\n    \n        const photoKey = image.key;\n        const fullPhotoKey = `private/${cognitoID}/photos/${photoKey}`;\n    \n        const myInit = {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          response: true,\n          queryStringParameters: {  \n            action: 'deleteImage',\n            key: fullPhotoKey\n          },\n        };\n    \n        await API.del(apiName, path, myInit);\n        that.setState((currentState) => {\n          return {\n            tableData: currentState.tableData.reduce(function(accum, curVal){\n              if (curVal.key !== photoKey) {\n                accum.push(curVal);\n              }\n              return accum;\n            }, [])\n          };\n        });\n      })\n    );\n    // this.listImages();\n  }\n\n  uploadImage = () => {\n    console.log('test {}',this.upload.files[0].name);\n    console.log('test {}',this.upload.files[0].type);\n    Storage.put(\n      `photos/${this.upload.files[0].name}`,\n      this.upload.files[0],\n      { contentType: this.upload.files[0].type, level: 'private' }\n    ).then(() => {\n      this.upload = null;\n      this.setState(() => ({\n        response: 'Success uploading file!',\n      }));\n      this.listImages();\n    }).catch(err => {\n      this.setState({ response: `Cannot uploading file: ${err}` });\n    });\n  };\n\n  listImages = () => {\n    Storage.list('photos/', { level: 'private' })\n      .then(result => {\n        const fileArray = Object.values(result);\n        const tableData = fileArray.map(getImageDetails);\n\n        this.setState({ \n          tableData\n        });\n        this.setState({ \n          loaded: true, \n        });\n      });\n  };\n\n  componentDidMount = () => {\n    this.listImages();\n    Auth.currentUserInfo()\n      .then(response => {\n        console.log('test {}', response);\n        this.setState({\n          identity: response.id\n        });\n      });\n  }  \n\n  render() {\n    return (\n      <Fragment>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"App\">\n              <h2>Upload a new photo</h2>\n              <input\n                type=\"file\"\n                accept=\"image/png, image/jpeg\"\n                style={{ display: 'none' }}\n                ref={ref => (this.upload = ref)}\n                onChange={() =>\n                  this.setState({\n                    imageFile: this.upload.files[0],\n                    imageName: this.upload.files[0].name\n                  })\n                }\n              />\n              <input value={this.state.imageName} placeholder=\"Select file\" onChange={(e) => {this.handleChange(e);}} />\n              <button\n                onClick={() => {\n                  this.upload.value = null;\n                  this.upload.click();\n                }}\n                loading={this.state.uploading}\n              >\n          Browse\n              </button>\n\n              <button onClick={this.uploadImage}> Upload File </button>\n\n              {!!this.state.response && <div>{this.state.response}</div>}\n            </div>\n            <br />\n            {this.state.loaded && <FileTable filelist={this.state.tableData} deleteImages={this.deleteImages} /> }\n          </div>\n\n        </section>\n      </Fragment>\n    );\n  }\n\n}\n","import React, { Component, Fragment } from 'react';\nimport { Auth } from 'aws-amplify';\nexport default class ProfileAdmin extends Component {\n\n  state = {\n    email: '',\n    cognitoID: '',\n    username: '',\n    loading: true\n  };\n\n  componentDidMount() {\n    Auth.currentUserInfo()\n      .then(response => {\n        this.setState({ \n          email: response.attributes.email,\n          cognitoID: response.id,\n          username: response.username,\n          loading: false\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <section className=\"section\">\n          <div className=\"container\">\n            <h1>Profile Admin</h1>\n            <p className=\"subtitle is-5\">Manage your user profile below:</p>\n            <br />\n            <div className=\"columns\">\n              <div className=\"column is-one-third\">\n                <form action=\"/ChangePassword\">\n                  <input type=\"submit\" value=\"Change Password\" />\n                </form>\n                <br />\n                {\n                  this.state.loading ? \n                    <span>Loading... </span> :\n                    (\n                      <span>\n                        <h2><strong>Username:</strong> {this.state.username}</h2>\n                        <h2><strong>Email Address:</strong> {this.state.email}</h2>\n                        <h2><strong>Cognito ID: </strong> {this.state.cognitoID}</h2>\n                      </span>\n                    )\n                }\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nfunction FormErrors(props) {\n  if (\n    props.formerrors &&\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\n  ) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.passwordmatch\n            ? 'Password value does not match confirm password value'\n            : ''}\n        </div>\n        <div className=\"row justify-content-center help is-danger\">\n          {props.formerrors.blankfield ? 'All fields are required' : ''}\n        </div>\n      </div>\n    );\n  } else if (props.apierrors) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\n      </div>\n    );\n  } else if (props.formerrors && props.formerrors.cognito) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.cognito.message}\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default FormErrors;","function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName('is-danger');\n  \n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains('error')) {\n      inputs[i].classList.remove('is-danger');\n    }\n  }\n\n  // Field contains a value\n  if (state.username && state.username.trim() === '') {\n    document.getElementById('username').classList.add('is-danger');\n    return { blankfield: true };\n  }\n  if (state.firstname && state.firstname.trim() === '') {\n    document.getElementById('firstname').classList.add('is-danger');\n    return { blankfield: true };\n  }\n  if (state.lastname && state.lastname.trim() === '') {\n    document.getElementById('lastname').classList.add('is-danger');\n    return { blankfield: true };\n  }\n  if (state.email && state.email.trim() === '') {\n    document.getElementById('email').classList.add('is-danger');\n    return { blankfield: true };\n  }\n  if (state.verificationcode && state.verificationcode.trim() === '') {\n    document.getElementById('verificationcode').classList.add('is-danger');\n    return { blankfield: true };\n  }\n  if (state.password && state.password.trim() === '') {\n    document.getElementById('password').classList.add('is-danger');\n    return { blankfield: true };\n  }\n  if (state.oldpassword && state.oldpassword.trim() === '') {\n    document.getElementById('oldpassword').classList.add('is-danger');\n    return { blankfield: true };\n  }\n  if (state.newpassword && state.newpassword.trim() === '') {\n    document.getElementById('newpassword').classList.add('is-danger');\n    return { blankfield: true };\n  }\n  if (state.confirmpassword && state.confirmpassword.trim() === '') {\n    document.getElementById('confirmpassword').classList.add('is-danger');\n    return { blankfield: true };\n  }\n  if (state.password && state.confirmpassword && state.password !== state.confirmpassword) {\n    document.getElementById('password').classList.add('is-danger');\n    document.getElementById('confirmpassword').classList.add('is-danger');\n    return { passwordmatch: true };\n  }\n  if (state.newpassword && state.confirmpassword && state.newpassword !== state.confirmpassword) {\n    document.getElementById('newpassword').classList.add('is-danger');\n    document.getElementById('confirmpassword').classList.add('is-danger');\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;","import React, { Component } from 'react';\n\nimport FormErrors from '../FormErrors';\nimport Validate from '../../lib/formValidation';\n\nclass LogIn extends Component {\n  state = {\n    username: '',\n    password: '',\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await this.props.handleLogIn(this.state.username, this.state.password);\n      this.props.history.push('/');\n    }catch(error) {\n      let err = null;\n      !error.message ? err = { 'message': error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove('is-danger');\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Log in</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LogIn;","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\n\nimport FormErrors from '../FormErrors';\nimport Validate from '../../lib/formValidation';\n\nclass Register extends Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    confirmpassword: '',\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    const { username, email, password } = this.state;\n\n    try {\n      const signUpResponse = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email: email\n        }\n      });\n      console.log(signUpResponse);\n      this.props.history.push('/verify', { username });\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { 'message': error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove('is-danger');\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Register</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"userNameHelp\"\n                  placeholder=\"Enter username\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Register\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\n\nimport FormErrors from '../FormErrors';\nimport Validate from '../../lib/formValidation';\n\nclass ForgotPassword extends Component {\n  state = {\n    email: '',\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  }\n\n  forgotPasswordHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.forgotPassword(this.state.email);\n      this.props.history.push('/forgotpasswordverification');\n    }catch(error) {\n      console.log(error);\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove('is-danger');\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Forgot your password?</h1>\n          <p>\n            Please enter the email address associated with your account and we'll\n            email you a password reset link.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.forgotPasswordHandler}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  type=\"email\"\n                  className=\"input\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Submit\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPassword;","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\n\nimport FormErrors from '../FormErrors';\nimport Validate from '../../lib/formValidation';\n\nclass ForgotPasswordVerification extends Component {\n  state = {\n    verificationcode: '',\n    email: '',\n    newpassword: '',\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  passwordVerificationHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.forgotPasswordSubmit(\n        this.state.email,\n        this.state.verificationcode,\n        this.state.newpassword\n      );\n      this.props.history.push('/changepasswordconfirmation');\n    }catch(error) {\n      console.log(error);\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove('is-danger');\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Set new password</h1>\n          <p>\n            Please enter the verification code sent to your email address below,\n            your email address and a new password.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.passwordVerificationHandler}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  id=\"verificationcode\"\n                  aria-describedby=\"verificationCodeHelp\"\n                  placeholder=\"Enter verification code\"\n                  value={this.state.verificationcode}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  type=\"password\"\n                  className=\"input\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Submit\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPasswordVerification;","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\n\nimport FormErrors from '../FormErrors';\nimport Validate from '../../lib/formValidation';\n\nclass ChangePassword extends Component {\n  state = {\n    oldpassword: '',\n    newpassword: '',\n    confirmpassword: '',\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    \n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      console.log(user);\n      await Auth.changePassword(\n        user,\n        this.state.oldpassword,\n        this.state.newpassword\n      );\n      this.props.history.push('/changepasswordconfirmation');\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { 'message': error } : err = error;\n      this.setState({\n        errors: { ...this.state.errors, cognito: err }\n      });\n      console.log(err);\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove('is-danger');\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"oldpassword\"\n                  placeholder=\"Old password\"\n                  value={this.state.oldpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Change password\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePassword;","import React, { Component } from 'react';\n\nclass ChangePasswordConfirmation extends Component {\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <p>Your password has been successfully updated!</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePasswordConfirmation;","import React from 'react';\n\nexport default function Welcome() {\n\n  setTimeout(() => {\n    window.location.href = '/login';\n  }, 5000);\n\n  return (\n    <section className=\"section auth\">\n      <div className=\"container\">\n        <h1>Welcome!</h1>\n        <p>You have successfully registered a new account.</p>\n        <p>You will be redirected to the login page shortly. If you are not redirected within 5 seconds, <a href=\"/login\">click here</a></p>\n      </div>\n    </section>\n  );\n}\n","import React from 'react';\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n           This software is distributed under the Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n        </p>\n      </div>\n    </footer>\n  );\n}\n","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\n\nimport FormErrors from '../FormErrors';\nimport Validate from '../../lib/formValidation';\n\nclass VerifyAccount extends Component {\n  state = {\n    username: '',\n    verificationcode: '',\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  componentDidMount() {\n    const locationState = this.props.location.state;\n\n    if (locationState && locationState.username) {\n      this.setState({ username: locationState.username });\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.confirmSignUp(this.state.username, this.state.verificationcode);\n      this.props.history.push('/welcome');\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { 'message': error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove('is-danger');\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Verification</h1>\n          <p>We've sent you a email with a confirmation code. Please fill out the form below with the code.</p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  id=\"verificationcode\"\n                  aria-describedby=\"verificationcodeHelp\"\n                  placeholder=\"Enter Verification Code\"\n                  value={this.state.verificationcode}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/resendverification\">Re-send verification code?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Verify account\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default VerifyAccount;","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\n\nimport FormErrors from '../FormErrors';\nimport Validate from '../../lib/formValidation';\n\nclass ResendVerification extends Component {\n  state = {\n    username: '',\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.resendSignUp(this.state.username);\n      this.props.history.push('/verify', { username: this.state.username });\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { 'message': error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove('is-danger');\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Resend verification code</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Resend Verify code\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ResendVerification;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { Auth } from 'aws-amplify';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nimport './App.css';\n\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Photos from './components/photos/Photos';\nimport PhotosAdmin from './components/PhotosAdmin';\nimport ProfileAdmin from './components/ProfileAdmin';\nimport LogIn from './components/auth/LogIn';\nimport Register from './components/auth/Register';\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\nimport ChangePassword from './components/auth/ChangePassword';\nimport ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\nimport Welcome from './components/auth/Welcome';\nimport Footer from './components/Footer';\nimport VerifyAccount from './components/auth/VerifyAccount';\nimport ResendVerification from './components/auth/ResendVerification';\n\nlibrary.add(faEdit);\n\nconst ProtectedRoute = ({ component: Comp, loggedIn, verified, path, ...rest }) => {\n\n  const wrapper = (render) => <Route path={path} {...rest} render={render} />;\n  const redirect = (to, error) => wrapper(() => {\n    return <Redirect\n      to={{\n        pathname: to,\n        state: {\n          prevLocation: path,\n          error,\n        },\n      }}\n    />;\n  });\n\n  if (!loggedIn) {\n    return redirect('/login', 'You need to login first!');\n  }\n\n  if (!verified) {\n    return redirect('/verify', 'You need to verify your account first!');\n  }\n\n  return wrapper((props) => <Comp {...props} />);\n\n};\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    isVerified: false,\n    user: null\n  }\n\n  handleLogOut = async () => {\n    try {\n      await Auth.signOut();\n      this.setState({\n        user: null,\n        isAuthenticated: false,\n        isAuthenticating: false,\n        isVerified: false\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  handleLogIn = async (username, password) => {\n    try {\n      const user = await Auth.signIn(username, password);\n      console.log(user);\n      this.setState({\n        user: user,\n        isAuthenticated: true,\n      });\n    } catch (error) {\n      if (error.code && error.code === 'UserNotConfirmedException') {\n        window.location.href = '/verify';\n      }\n      console.log(error.message);\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const session = await Auth.currentSession();\n      this.setState({\n        isAuthenticated: true\n      });\n      console.log(session);\n\n      const user = await Auth.currentAuthenticatedUser();\n      this.setState({\n        user\n      });\n\n      if (user.attributes.email_verified) {\n        this.setState({\n          isVerified: true\n        });\n      }\n    } catch (error) {\n      if (error !== 'No current user') {\n        console.log(error);\n      }\n    }\n\n    this.setState({ isAuthenticating: false });\n  }\n\n  render() {\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n    };\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar auth={authProps} handleLogOut={this.handleLogOut} />\n            <Switch>\n              <Route exact path=\"/\" render={(props) => <Home {...props} auth={authProps} />} />\n              {/* <Route exact path=\"/products\" render={(props) => <Products {...props} auth={authProps} />} /> */}\n              <ProtectedRoute path=\"/photos\" loggedIn={this.state.isAuthenticated} verified={this.state.isVerified} component={Photos} />\n              <ProtectedRoute path=\"/admin\" loggedIn={this.state.isAuthenticated} verified={this.state.isVerified} component={PhotosAdmin} />\n              <ProtectedRoute path=\"/profile\" loggedIn={this.state.isAuthenticated} verified={this.state.isVerified} component={ProfileAdmin} />\n              <Route exact path=\"/admin\" render={(props) => <PhotosAdmin {...props} auth={authProps} />} />\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} handleLogIn={this.handleLogIn} />} />\n              <Route exact path=\"/verify\" render={(props) => <VerifyAccount {...props} auth={authProps} />} />\n              <Route exact path=\"/resendverification\" render={(props) => <ResendVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './index.css';\nimport App from './App';\nimport Amplify, { Auth } from 'aws-amplify';\nimport config from './config';\nimport * as serviceWorker from './serviceWorker';\n\n\nAmplify.configure({\n  Auth: {\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  Storage: {\n    region: config.cognito.REGION,\n    bucket: config.s3.bucket  },\n  API: {\n    endpoints: [\n      {\n        name: 'imageAPI',\n        endpoint: config.api.invokeUrl,\n        path: '/images',\n        custom_header: async () => { \n          //   return { Authorization : 'token' } \n          //   // Alternatively, with Cognito User Pools use this:\n          //   // return { Authorization: `Bearer ${(await Auth.currentSession()).getAccessToken().getJwtToken()}` }\n          // return { Authorization: `Bearer ${(await Auth.currentSession()).getIdToken().getJwtToken()}` }\n          return { Authorization: `Bearer ${(await Auth.currentSession()).getIdToken().getJwtToken()}` };\n        }\n      }\n    ]\n  }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}